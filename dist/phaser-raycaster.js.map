{"version":3,"sources":["webpack://PhaserRaycaster/webpack/universalModuleDefinition","webpack://PhaserRaycaster/webpack/bootstrap","webpack://PhaserRaycaster/./src/main.js","webpack://PhaserRaycaster/./src/map/map-circle-methods.js","webpack://PhaserRaycaster/./src/map/map-core.js","webpack://PhaserRaycaster/./src/map/map-line-methods.js","webpack://PhaserRaycaster/./src/map/map-polygon-methods.js","webpack://PhaserRaycaster/./src/map/map-rectangle-methods.js","webpack://PhaserRaycaster/./src/ray/ray-core.js","webpack://PhaserRaycaster/./src/raycaster-core.js"],"names":["PhaserRaycaster","scene","systems","sys","settings","isBooted","events","once","boot","register","PluginManager","prototype","eventEmitter","on","start","preUpdate","update","postUpdate","pause","resume","sleep","wake","shutdown","destroy","test","name","console","log","time","delta","undefined","createRaycaster","options","_Raycaster","constructor","require","Raycaster","module","exports","getPoints","ray","_points","length","points","offset","Phaser","Geom","Point","x","object","displayWidth","originX","y","displayHeight","originY","rayA","Line","rayB","c","rotation","vector","SetToAngle","Angle","Length","cB","getPointB","origin","rayLength","Math","sqrt","pow","radius","scaleX","angle","dAngle","asin","push","getSegments","_segments","updateMap","segmentCount","scaleY","geom","segments","newPoints","point","i","Map","type","active","dynamic","_object","getIntersections","config","_getPolygonPoints","_getPolygonSegments","_updatePolygonMap","_getArcPoints","_getArcSegments","_updateArcMap","_getLinePoints","_getLineSegments","_updateLineMap","_getRectanglePoints","_getRectangleSegments","_updateRectangleMap","setSegmentCount","count","rectangle","line","polygon","arc","pointA","getPointA","pointB","vectorA","vectorB","closePath","last","getTopLeft","getTopRight","getBottomRight","getBottomLeft","Ray","raycaster","_ray","range","MAX_SAFE_INTEGER","detectionRange","detectionRangeCircle","Circle","ignoreNotIntersectedRays","intersections","_raycaster","setTo","Normalize","setRay","setOrigin","setRange","setAngle","setAngleDeg","DegToRad","setDetectionRange","rangeCircle","boundsInRange","bounds","objectBounds","getBounds","Intersects","CircleToRectangle","cast","closestIntersection","closestDistance","boundingBox","GetLineToRectangle","intersection","distance","Distance","Between","target","objects","mappedObjects","map","data","get","segment","Equals","LineToLine","isTangent","circleIntersections","circle","GetLineToCircle","x1","y1","castCircle","maps","rayTargets","testedObjects","iLength","j","jLength","objectB","mapB","RectangleToRectangle","segmentA","segmentB","sort","a","b","intersectionA","intersectionB","version","graphics","sortedPoints","mapSegmentCount","physics","world","setOptions","bind","add","lineStyle","width","color","fillStyle","mapGameObjects","setBoundingBox","height","Rectangle","left","top","right","bottom","Array","isArray","includes","setDataEnabled","set","removeMappedObjects","index","indexOf","splice","mapppedObject","createRay"],"mappings":"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","file":"phaser-raycaster.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"PhaserRaycaster\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PhaserRaycaster\"] = factory();\n\telse\n\t\troot[\"PhaserRaycaster\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","/**\r\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\r\n* @copyright    2020 Marcin Walczak\r\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\r\n*/\r\n\r\nvar PhaserRaycaster = function (scene)\r\n{\r\n    //The Scene that owns this plugin\r\n    this.scene = scene;\r\n\r\n    this.systems = scene.sys;\r\n\r\n    if (!scene.sys.settings.isBooted)\r\n    {\r\n        scene.sys.events.once('boot', this.boot, this);\r\n    }\r\n};\r\n\r\n//Static function called by the PluginFile Loader.\r\nPhaserRaycaster.register = function (PluginManager)\r\n{\r\n    //  Register this plugin with the PluginManager, so it can be added to Scenes.\r\n\r\n    //  The first argument is the name this plugin will be known as in the PluginManager. It should not conflict with already registered plugins.\r\n    //  The second argument is a reference to the plugin object, which will be instantiated by the PluginManager when the Scene boots.\r\n    //  The third argument is the local mapping. This will make the plugin available under `this.sys.base` and also `this.base` from a Scene if\r\n    //  it has an entry in the InjectionMap.\r\n    PluginManager.register('PhaserRaycaster', PhaserRaycaster, 'base');\r\n};\r\n\r\nPhaserRaycaster.prototype = {\r\n\r\n    //  Called when the Plugin is booted by the PluginManager.\r\n    //  If you need to reference other systems in the Scene (like the Loader or DisplayList) then set-up those references now, not in the constructor.\r\n    boot: function ()\r\n    {\r\n        var eventEmitter = this.systems.events;\r\n\r\n        //  Listening to the following events is entirely optional, although we would recommend cleanly shutting down and destroying at least.\r\n        //  If you don't need any of these events then remove the listeners and the relevant methods too.\r\n\r\n        eventEmitter.on('start', this.start, this);\r\n\r\n        eventEmitter.on('preupdate', this.preUpdate, this);\r\n        eventEmitter.on('update', this.update, this);\r\n        eventEmitter.on('postupdate', this.postUpdate, this);\r\n\r\n        eventEmitter.on('pause', this.pause, this);\r\n        eventEmitter.on('resume', this.resume, this);\r\n\r\n        eventEmitter.on('sleep', this.sleep, this);\r\n        eventEmitter.on('wake', this.wake, this);\r\n\r\n        eventEmitter.on('shutdown', this.shutdown, this);\r\n        eventEmitter.on('destroy', this.destroy, this);\r\n    },\r\n\r\n    //A test method.\r\n    test: function (name)\r\n    {\r\n        console.log('RaycasterPlugin says hello ' + name + '!');\r\n    },\r\n\r\n    //Called when a Scene is started by the SceneManager. The Scene is now active, visible and running.\r\n    start: function ()\r\n    {\r\n    },\r\n\r\n    //Called every Scene step - phase 1\r\n    preUpdate: function (time, delta)\r\n    {\r\n    },\r\n\r\n    //Called every Scene step - phase 2\r\n    update: function (time, delta)\r\n    {\r\n    },\r\n\r\n    //Called every Scene step - phase 3\r\n    postUpdate: function (time, delta)\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is paused. A paused scene doesn't have its Step run, but still renders.\r\n    pause: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is resumed from a paused state.\r\n    resume: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is put to sleep. A sleeping scene doesn't update or render, but isn't destroyed or shutdown. preUpdate events still fire.\r\n    sleep: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is woken from a sleeping state.\r\n    wake: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene shuts down, it may then come back again later (which will invoke the 'start' event) but should be considered dormant.\r\n    shutdown: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is destroyed by the Scene Manager. There is no coming back from a destroyed Scene, so clear up all resources here.\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n\r\n        this.scene = undefined;\r\n    },\r\n\r\n    //Create Raycaster object\r\n    createRaycaster: function(options = {}) {\r\n        options.scene = this.scene;\r\n        return new this._Raycaster(options);\r\n    }\r\n\r\n};\r\n\r\nPhaserRaycaster.prototype.constructor = PhaserRaycaster;\r\nPhaserRaycaster.prototype._Raycaster = require('./raycaster-core.js').Raycaster;\r\n\r\n//Make sure you export the plugin for webpack to expose\r\n\r\nmodule.exports = PhaserRaycaster;\r\n","/*Map methods for circles*/\r\n//get points\r\nexport function getPoints(ray = false) {\r\n    if(this._points.length > 0)\r\n        return this._points;\r\n    \r\n    let points = [];\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * (this.object.originX - 0.5);\r\n    offset.y = this.object.y - this.object.displayHeight * (this.object.originY - 0.5);\r\n\r\n    //calculate tangent rays\r\n    if(ray) {\r\n        let rayA = new Phaser.Geom.Line();\r\n        let rayB = new Phaser.Geom.Line();\r\n        let c;\r\n        \r\n        let rotation = this.object.rotation;\r\n        \r\n        if(rotation !== 0) {\r\n            let vector = new Phaser.Geom.Line(this.object.x, this.object.y, offset.x, offset.y);\r\n            Phaser.Geom.Line.SetToAngle(vector, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\r\n            let cB = vector.getPointB();\r\n            c = new Phaser.Geom.Line(ray.origin.x, ray.origin.y, cB.x, cB.y);\r\n        }\r\n        else { \r\n            c = new Phaser.Geom.Line(ray.origin.x, ray.origin.y, offset.x, offset.y);\r\n        }\r\n\r\n        let rayLength = Math.sqrt(Math.pow(Phaser.Geom.Line.Length(c), 2) - Math.pow(this.object.radius * this.object.scaleX, 2));\r\n\r\n        //ray angle\r\n        let angle = Phaser.Geom.Line.Angle(c);\r\n        let dAngle = Math.asin((this.object.radius * this.object.scaleX) / Phaser.Geom.Line.Length(c));\r\n        Phaser.Geom.Line.SetToAngle(rayA, ray.origin.x, ray.origin.y, angle - dAngle, rayLength);\r\n        Phaser.Geom.Line.SetToAngle(rayB, ray.origin.x, ray.origin.y, angle + dAngle, rayLength);\r\n\r\n        //adding tangent points\r\n        points.push(rayA.getPointB());\r\n        points.push(rayB.getPointB());\r\n    }\r\n\r\n    return points;\r\n};\r\n\r\n//get segments\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n//map update\r\nexport function updateMap() {\r\n    if(!this.segmentCount) {\r\n        this._points = [];\r\n        this._segments = [];\r\n        return this;\r\n    }\r\n    \r\n    //calculate offset based on object position and origin point\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * this.object.originX + this.object.radius * this.object.scaleX;\r\n    offset.y = this.object.y - this.object.displayHeight * this.object.originY + this.object.radius * this.object.scaleY;\r\n\r\n    //get points surrounding circle\r\n    let points = this.object.geom.getPoints(this.segmentCount);\r\n    let segments = []\r\n\r\n    //set points\r\n    //calculate positions after object's rotation\r\n    let rotation = this.object.rotation;\r\n    if(rotation !== 0) {\r\n        let newPoints = [];\r\n        for(let point of points) {\r\n            let vector = new Phaser.Geom.Line(this.object.x, this.object.y, this.object.x + (point.x + this.object.radius) * this.object.scaleX, this.object.y + (point.y + this.object.radius) * this.object.scaleY);\r\n            Phaser.Geom.Line.SetToAngle(vector, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\r\n            newPoints.push(vector.getPointB());\r\n        }\r\n        points = newPoints;\r\n    }\r\n    //if rotation === 0\r\n    else {\r\n        for(let point of points) {\r\n            point.x = point.x * this.object.scaleX + offset.x;\r\n            point.y = point.y * this.object.scaleY + offset.y;\r\n        }\r\n    }\r\n\r\n    //set segments\r\n    for(let i = 0, length = points.length; i < length; i++) {\r\n        if(i+1 < length)\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));\r\n        else\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[0].x, points[0].y));\r\n    }\r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n    return this;\r\n};\r\n","export function Map(options, scene) {\r\n    this.type;\r\n    this.active;\r\n    this.dynamic;\r\n    this._object;\r\n    this._points = [];\r\n    this._segments = [];\r\n    this.getPoints;\r\n    this.getSegments;\r\n    this.getIntersections;\r\n    this.segmentCount = 0;\r\n\r\n    this.config(options);\r\n    this.updateMap();\r\n\r\n    return this;\r\n};\r\n\r\n//config\r\nMap.prototype = {\r\n    config: function(options) {\r\n        this.object = options.object;\r\n        //object type\r\n        if(options.type === undefined)\r\n            options.type = options.object.type;\r\n        this.type = options.type;\r\n\r\n        switch(options.type) {\r\n            case 'Polygon':\r\n                this.getPoints = this._getPolygonPoints;\r\n                this.getSegments = this._getPolygonSegments;\r\n                this.updateMap = this._updatePolygonMap;\r\n                break;\r\n            case 'Arc':\r\n                this.getPoints = this._getArcPoints;\r\n                this.getSegments = this._getArcSegments;\r\n                this.updateMap = this._updateArcMap;\r\n                break;\r\n            case 'Line':\r\n                this.getPoints = this._getLinePoints;\r\n                this.getSegments = this._getLineSegments;\r\n                this.updateMap = this._updateLineMap;\r\n                break;\r\n            default:\r\n                this.getPoints = this._getRectanglePoints;\r\n                this.getSegments = this._getRectangleSegments;\r\n                this.updateMap = this._updateRectangleMap;\r\n        }\r\n\r\n        //dynamic map\r\n        this.dynamic = (options.dynamic == true) ? true : false;\r\n        this.segmentCount = (options.segmentCount) ? options.segmentCount : 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    //set segments count for circle map\r\n    setSegmentCount: function(count) {\r\n        this.segmentCount = count;\r\n        this.updateMap();\r\n        return this;\r\n    }\r\n};\r\n//add methods for rectangle maps\r\nlet rectangle = require('./map-rectangle-methods.js');\r\nMap.prototype._getRectanglePoints = rectangle.getPoints;\r\nMap.prototype._getRectangleSegments = rectangle.getSegments;\r\nMap.prototype._updateRectangleMap = rectangle.updateMap;\r\n\r\n//add methods for line maps\r\nlet line = require('./map-line-methods.js');\r\nMap.prototype._getLinePoints = line.getPoints;\r\nMap.prototype._getLineSegments = line.getSegments;\r\nMap.prototype._updateLineMap = line.updateMap;\r\n\r\n//add methods for polygon maps\r\nlet polygon = require('./map-polygon-methods.js');\r\nMap.prototype._getPolygonPoints = polygon.getPoints;\r\nMap.prototype._getPolygonSegments = polygon.getSegments;\r\nMap.prototype._updatePolygonMap = polygon.updateMap;\r\n\r\n//add methods for circle maps\r\nlet arc = require('./map-circle-methods.js');\r\nMap.prototype._getArcPoints = arc.getPoints;\r\nMap.prototype._getArcSegments = arc.getSegments;\r\nMap.prototype._updateArcMap = arc.updateMap;\r\n","/*Map methods for lines*/\r\n//get points\r\nexport function getPoints(ray = false) {\r\n    return this._points;\r\n};\r\n\r\n//get segments\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n//map update\r\nexport function updateMap() {\r\n    let points = [];\r\n    let segments = [];\r\n    \r\n    //calculate offset based on object position and origin point\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * this.object.originX;\r\n    offset.y = this.object.y - this.object.displayHeight * this.object.originY;\r\n    let pointA = this.object.geom.getPointA();\r\n    let pointB = this.object.geom.getPointB();\r\n\r\n    //calculate positions after object's rotation\r\n    let rotation = this.object.rotation;\r\n    if(rotation !== 0) {\r\n        let vectorA = new Phaser.Geom.Line(this.object.x, this.object.y, pointA.x * this.object.scaleX + offset.x, pointA.y * this.object.scaleY + offset.y);\r\n        Phaser.Geom.Line.SetToAngle(vectorA, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vectorA) + rotation, Phaser.Geom.Line.Length(vectorA));\r\n        pointA = vectorA.getPointB();\r\n\r\n        let vectorB = new Phaser.Geom.Line(this.object.x, this.object.y, pointB.x * this.object.scaleX + offset.x, pointB.y * this.object.scaleY + offset.y);\r\n        Phaser.Geom.Line.SetToAngle(vectorB, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vectorB) + rotation, Phaser.Geom.Line.Length(vectorB));\r\n        pointB = vectorB.getPointB();\r\n\r\n        //set points\r\n        points.push(new Phaser.Geom.Point(pointA.x, pointA.y));\r\n        points.push(new Phaser.Geom.Point(pointB.x, pointB.y));\r\n        //set segment\r\n        segments.push(new Phaser.Geom.Line(pointA.x, pointA.y, pointB.x, pointB.y));\r\n    }\r\n    //if rotation === 0\r\n    else {\r\n        //set points\r\n        points.push(new Phaser.Geom.Point(pointA.x * this.object.scaleX + offset.x, pointA.y * this.object.scaleY + offset.y));\r\n        points.push(new Phaser.Geom.Point(pointB.x * this.object.scaleX + offset.x, pointB.y * this.object.scaleY + offset.y));\r\n        //set segment\r\n        segments.push(new Phaser.Geom.Line(pointA.x + offset.x, pointA.y + offset.y, pointB.x + offset.x, pointB.y + offset.y));\r\n    }\r\n    \r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n    return this;\r\n};\r\n","/*Map methods for polygons*/\r\n//get points\r\nexport function getPoints(ray = false) {\r\n    return this._points;\r\n};\r\n\r\n//get segments\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n//map update\r\nexport function updateMap() {\r\n    let points = [];\r\n    let segments = [];\r\n    \r\n    //calculate offset based on object position and origin point\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * this.object.originX;\r\n    offset.y = this.object.y - this.object.displayHeight * this.object.originY;\r\n    //set points\r\n    //calculate positions after object's rotation\r\n    let rotation = this.object.rotation;\r\n    if(rotation !== 0) {\r\n        for(let point of this.object.geom.points) {\r\n            let vector = new Phaser.Geom.Line(this.object.x, this.object.y, point.x * this.object.scaleX + offset.x, point.y * this.object.scaleY + offset.y);\r\n            Phaser.Geom.Line.SetToAngle(vector, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\r\n            points.push(vector.getPointB());\r\n        }\r\n    }\r\n    //if rotation === 0\r\n    else {\r\n        for(let point of this.object.geom.points) {\r\n            points.push(new Phaser.Geom.Point(point.x * this.object.scaleX + offset.x, point.y * this.object.scaleY + offset.y));\r\n        }\r\n    }\r\n\r\n    //set segments\r\n    for(let i = 0, length = points.length; i < length; i++) {\r\n        if(i+1 < length)\r\n            segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));   \r\n    }\r\n    //if polygon is closed\r\n    if(this.object.closePath) {\r\n        let last = points.length - 1;\r\n        segments.push(new Phaser.Geom.Line(points[last].x, points[last].y, points[0].x, points[0].y));\r\n    }\r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n\r\n    return this;\r\n};\r\n","/*Map methods for rectangles*/\r\n//get points\r\nexport function getPoints(ray = false) {\r\n    return this._points;\r\n};\r\n\r\n//get segments\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n//map update\r\nexport function updateMap() {\r\n    let points = [];\r\n    let segments = [];\r\n\r\n    //set points\r\n    points = [\r\n        this.object.getTopLeft(),\r\n        this.object.getTopRight(),\r\n        this.object.getBottomRight(),\r\n        this.object.getBottomLeft()\r\n    ];\r\n\r\n    //set segments\r\n    for(let i = 0, length = points.length; i < length; i++) {\r\n        if(i+1 < length)\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));\r\n        else\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[0].x, points[0].y));\r\n    }\r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n\r\n    return this;\r\n};\r\n","export function Ray(options, raycaster) {\r\n    this.origin = new Phaser.Geom.Point();\r\n    this._ray = new Phaser.Geom.Line();\r\n    this.angle = 0;\r\n    this.range = Phaser.Math.MAX_SAFE_INTEGER;\r\n    this.detectionRange = 0;\r\n    this.detectionRangeCircle = new Phaser.Geom.Circle();\r\n    this.ignoreNotIntersectedRays = true;\r\n    this.intersections = [];\r\n    this._raycaster = raycaster ? raycaster : false;\r\n\r\n    this.config(options);\r\n};\r\n\r\nRay.prototype = {\r\n    //config\r\n    config: function(options) {\r\n        this.object = options.object;\r\n        //origin\r\n        if(options.origin)\r\n            this.origin.setTo(options.origin.x, options.origin.y);\r\n\r\n        //angle\r\n        if(options.angle)\r\n            this.angle = Phaser.Math.Angle.Normalize(angle);\r\n\r\n        //range (0 = max)\r\n        if(options.range)\r\n            this.range = options.range;\r\n\r\n        //detection range (0 = max)\r\n        if(options.detectionRange)\r\n            this.detectionRange = options.detectionRange;\r\n\r\n        if(options.ignoreNotIntersectedRays !== undefined)\r\n            this.ignoreNotIntersectedRays = (options.ignoreNotIntersectedRays == true)\r\n        \r\n        Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\r\n        this.detectionRangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\r\n\r\n        return this;\r\n    },\r\n\r\n    //set ray\r\n    setRay: function(x, y, angle, range = Phaser.Math.MAX_SAFE_INTEGER) {\r\n        this.origin.setTo(x, y);\r\n        this.angle = Phaser.Math.Angle.Normalize(angle);\r\n        this.range = range;\r\n\r\n        Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\r\n        this.detectionRangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\r\n        return this;\r\n    },\r\n\r\n    //set ray's origin point\r\n    setOrigin: function(x, y) {\r\n        this.origin.setTo(x, y);\r\n        Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\r\n        this.detectionRangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\r\n        return this;\r\n    },\r\n\r\n    //set ray's range\r\n    setRange: function(range = Phaser.Math.MAX_SAFE_INTEGER) {\r\n        this.range = range;\r\n        Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\r\n        return this;\r\n    },\r\n\r\n    //set angle (rad)\r\n    setAngle: function(angle = 0) {\r\n        this.angle = Phaser.Math.Angle.Normalize(angle);\r\n        Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\r\n        return this;\r\n    },\r\n\r\n    //set angle (deg)\r\n    setAngleDeg(angle = 0) {\r\n        this.angle = Phaser.Math.Angle.Normalize(Phaser.Math.DegToRad(angle));\r\n        Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\r\n        return this;\r\n    },\r\n\r\n    //set detection range\r\n    setDetectionRange: function(detectionRange = 0) {\r\n        this.detectionRange = detectionRange;\r\n        this.rangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\r\n        return this;\r\n    },\r\n\r\n    //is object (possibly) in range\r\n    boundsInRange(object, bounds = false) {\r\n        if(!this.detectionRange)\r\n            return true;\r\n\r\n        let objectBounds;\r\n        if(bounds)\r\n            objectBounds = bounds;\r\n        else\r\n            objectBounds = object.getBounds();\r\n\r\n        if(Phaser.Geom.Intersects.CircleToRectangle(this.detectionRangeCircle, objectBounds))\r\n            return true;\r\n\r\n        return false;\r\n    },\r\n\r\n    //cast ray to find closest intersection\r\n    cast(options = {}) {\r\n        let closestIntersection;\r\n        let closestDistance = Phaser.Math.MAX_SAFE_INTEGER;\r\n        //if bounding box is defined check bounding box intersection\r\n        if(this._raycaster && this._raycaster.boundingBox) {\r\n            let intersections = [];\r\n            Phaser.Geom.Intersects.GetLineToRectangle(this._ray, this._raycaster.boundingBox.rectangle, intersections);\r\n            if(intersections.length === 1)\r\n                closestIntersection = intersections[0];\r\n            else if(intersections.length > 1) {\r\n                for(let intersection of intersections) {\r\n                    let distance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, intersection.x, intersection.y);\r\n                    if(distance < closestDistance) {\r\n                        closestDistance = distance;\r\n                        closestIntersection = intersection;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                closestDistance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, options.target.x, options.target.y);\r\n                closestIntersection = options.target;\r\n            }\r\n        }\r\n\r\n        //if no objects to cast ray were passed, use raycasters mapped objects\r\n        if(!options.objects) {\r\n            if(this._raycaster)\r\n                options.objects = this._raycaster.mappedObjects;\r\n            else\r\n                return intersections;\r\n        }\r\n        \r\n        for(let object of options.objects) {\r\n            //check if object is intersected by ray\r\n            if(!Phaser.Geom.Intersects.GetLineToRectangle(this._ray, object.getBounds()))\r\n                continue;\r\n\r\n            let map = object.data.get('raycasterMap');\r\n            \r\n            //check intersections\r\n            for(let segment of map.getSegments()) {\r\n                let intersection = [];\r\n                //if target point is segmemt point\r\n                if(options.target) {\r\n                    if(\r\n                        Phaser.Geom.Point.Equals(options.target, segment.getPointA())\r\n                        || Phaser.Geom.Point.Equals(options.target, segment.getPointB())\r\n                    ) {\r\n                        intersection = options.target;\r\n                    }\r\n                    else if(!Phaser.Geom.Intersects.LineToLine(this._ray, segment, intersection))\r\n                        continue;\r\n                }\r\n                //if no intersection continue\r\n                else if(!Phaser.Geom.Intersects.LineToLine(this._ray, segment, intersection))\r\n                  continue;\r\n                \r\n                //get closest intersection\r\n                let distance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, intersection.x, intersection.y);\r\n                if(distance < closestDistance) {\r\n                    closestDistance = distance;\r\n                    closestIntersection = intersection;\r\n                }\r\n            }\r\n\r\n            //check arc intersections if its not\r\n            if(map.type === 'Arc') {\r\n               //if arc has generated points (besides tangent points to ray)\r\n                if(map._points.length > 0) {\r\n                    continue;\r\n                }\r\n                \r\n                //check if target point is a circle tangent point to ray\r\n                if(options.target) {\r\n                    let points = map.getPoints(this);\r\n                    let isTangent = false;\r\n                    for(let point of points) {\r\n\r\n                        if(Phaser.Geom.Point.Equals(options.target, point)) {\r\n                            //get closest intersection\r\n                            let distance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, point.x, point.y);\r\n\r\n                            if(distance < closestDistance) {\r\n                                closestDistance = distance;\r\n                                closestIntersection = point;\r\n                                isTangent = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if(isTangent)\r\n                        continue;\r\n                }\r\n\r\n                let circleIntersections = [];\r\n                let offset = new Phaser.Geom.Point();\r\n                offset.x = map.object.x - map.object.displayWidth * (map.object.originX - 0.5);\r\n                offset.y = map.object.y - map.object.displayHeight * (map.object.originY - 0.5);\r\n\r\n                //calculate circle's center after rotation\r\n                let rotation = map.object.rotation;\r\n                if(rotation !== 0) {\r\n                    let vector = new Phaser.Geom.Line(map.object.x, map.object.y, offset.x, offset.y);\r\n                    Phaser.Geom.Line.SetToAngle(vector, map.object.x, map.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\r\n                    let cB = vector.getPointB();\r\n                    offset.x = cB.x;\r\n                    offset.y = cB.y;\r\n                }\r\n\r\n                //create transformed circle\r\n                let circle = new Phaser.Geom.Circle(offset.x, offset.y, map.object.radius * map.object.scaleX);\r\n\r\n                if(Phaser.Geom.Intersects.GetLineToCircle(this._ray, circle, circleIntersections)) {\r\n                    for(let intersection of circleIntersections) {\r\n                        //get closest intersection\r\n                        let distance = Phaser.Math.Distance.Between(this._ray.x1, this._ray.y1, intersection.x, intersection.y);\r\n\r\n                        if(distance < closestDistance) {\r\n\r\n                            closestDistance = distance;\r\n                            closestIntersection = intersection;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!closestIntersection)\r\n            return (this.ignoreNotIntersectedRays) ? false : this._ray.getPointB();\r\n        return new Phaser.Geom.Point(closestIntersection.x, closestIntersection.y);\r\n    },\r\n\r\n    //cast ray in all directions\r\n    castCircle: function(options = {}) {\r\n        let intersections = [];\r\n        let maps = [];\r\n        let rayTargets = [];\r\n        let testedObjects = [];\r\n\r\n        //if no objects to cast ray were passed, use raycasters mapped objects\r\n        if(!options.objects) {\r\n            if(this._raycaster)\r\n                options.objects = this._raycaster.mappedObjects;\r\n            else\r\n                return intersections;\r\n\r\n            //if bounding box is defined add bounding box points to \r\n            if(this._raycaster && this._raycaster.boundingBox) {\r\n                for(let point of this._raycaster.boundingBox.points) {\r\n                    rayTargets.push({\r\n                        point: point,\r\n                        angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y)\r\n                    });\r\n                }\r\n            }\r\n\r\n            for(let i=0, iLength = options.objects.length; i < iLength; i++) {\r\n                let object = options.objects[i];\r\n                //if bound in range\r\n                if(!this.boundsInRange(object))\r\n                    continue;\r\n                \r\n                testedObjects.push(object);\r\n\r\n                let map = object.data.get('raycasterMap');\r\n                maps.push(map);\r\n                //get points and angles\r\n                for(let point of map.getPoints(this)) {\r\n                    rayTargets.push({\r\n                        point: point,\r\n                        angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y)\r\n                    });\r\n                }\r\n\r\n                //get objects intersections\r\n                for(let j = i+1, jLength = options.objects.length; j < jLength; j++){\r\n                    let objectB = options.objects[j];\r\n                    let mapB = objectB.data.get('raycasterMap');\r\n                    //check if bounding boxes overlap\r\n                    if(!Phaser.Geom.Intersects.RectangleToRectangle(object.getBounds(), objectB.getBounds()))\r\n                        continue;\r\n                    \r\n                    //find objects intersections\r\n                    for(let segmentA of map.getSegments()) {\r\n                        for(let segmentB of mapB.getSegments()) {\r\n                            let intersection = [];\r\n                            if(!Phaser.Geom.Intersects.LineToLine(segmentA, segmentB, intersection))\r\n                                continue;\r\n                            \r\n                            rayTargets.push({\r\n                                point: new Phaser.Geom.Point(intersection.x, intersection.y),\r\n                                angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, intersection.x, intersection.y)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //sort target points by angle\r\n            rayTargets.sort(function(a, b){\r\n                return a.angle - b.angle;\r\n            });\r\n\r\n            //cast rays\r\n            for(let target of rayTargets){\r\n                this.setAngle(target.angle);\r\n                let intersection = this.cast({\r\n                    objects: testedObjects,\r\n                    target: target.point\r\n                });\r\n                if(intersection){\r\n                    //if intersection hits target point cast two additional rays\r\n                    if(Phaser.Geom.Point.Equals(target.point, intersection)) {\r\n                        this.setAngle(target.angle - 0.0001);\r\n                        let intersectionA = this.cast({\r\n                            objects: testedObjects\r\n                        });\r\n                        if(intersectionA)\r\n                            intersections.push(intersectionA);\r\n                        \r\n                        intersections.push(intersection);\r\n\r\n                        this.setAngle(target.angle + 0.0001);\r\n                        let intersectionB = this.cast({\r\n                            objects: testedObjects\r\n                        });\r\n                        if(intersectionB)\r\n                            intersections.push(intersectionB);\r\n\r\n                        continue;\r\n                    }\r\n                    intersections.push(intersection);\r\n                }\r\n            }\r\n        }\r\n\r\n        return intersections;\r\n    }\r\n};\r\n","export function Raycaster(options) {\r\n    this.version = '0.6.4';\r\n    this.scene;\r\n    this.graphics;\r\n    this.boundingBox = false;\r\n    this.mappedObjects = [];\r\n    this.sortedPoints = [];\r\n    this.mapSegmentCount = 0;   //quantity of segments of map of circle\r\n\r\n    if(options !== undefined) {\r\n        if(options.boundingBox === undefined && options.scene !== undefined && options.scene.physics !== undefined)\r\n            options.boundingBox = options.scene.physics.world.bounds;\r\n\r\n        this.setOptions(options);\r\n    }\r\n\r\n    //update event\r\n        this.scene.events.on('update', function() {\r\n            this.update();\r\n        }.bind(this));\r\n\r\n    return this;\r\n}\r\n\r\nRaycaster.prototype = {\r\n    //set options\r\n    setOptions: function(options) {\r\n        if(options.scene !== undefined) {\r\n            this.scene = options.scene;\r\n            this.graphics =  this.scene.add.graphics({ lineStyle: { width: 1, color: 0x00ff00}, fillStyle: { color: 0xff00ff } });\r\n        }\r\n\r\n        if(options.mapSegmentCount !== undefined)\r\n            this.mapSegmentCount = options.mapSegmentCount;\r\n\r\n        if(options.objects !== undefined)\r\n            this.mapGameObjects(options.objects);\r\n\r\n        if(options.boundingBox !== undefined)\r\n            this.setBoundingBox(options.boundingBox.x, options.boundingBox.y, options.boundingBox.width, options.boundingBox.height)\r\n\r\n        return this;\r\n    },\r\n\r\n    //set bounding box\r\n    setBoundingBox: function(x, y, width, height) {\r\n        this.boundingBox = {\r\n            rectangle: new Phaser.Geom.Rectangle(x, y, width, height),\r\n            points: [],\r\n            segments: []\r\n        }\r\n        //set points\r\n        let points = [\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.left, this.boundingBox.rectangle.top),\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.right, this.boundingBox.rectangle.top),\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.right, this.boundingBox.rectangle.bottom),\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.left, this.boundingBox.rectangle.bottom)\r\n        ];\r\n\r\n        this.boundingBox.points = points;\r\n\r\n        //set segments\r\n        for(let i = 0, length = this.boundingBox.points.length; i < length; i++) {\r\n            if(i+1 < length)\r\n            this.boundingBox.segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));\r\n            else\r\n            this.boundingBox.segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[0].x, points[0].y));\r\n        }\r\n    },\r\n\r\n    //map object\r\n    mapGameObjects: function(objects, dynamic = false, segmentCount = this.mapSegmentCount) {\r\n        if(!Array.isArray(objects)) {\r\n            if(this.mappedObjects.includes(objects))\r\n                return this;\r\n\r\n            if(!objects.data)\r\n                objects.setDataEnabled();\r\n\r\n            let map = new this.Map({\r\n                object: objects,\r\n                dynamic: dynamic,\r\n                segmentCount: segmentCount\r\n            }, this.scene);\r\n\r\n            objects.data.set('raycasterMap', map);\r\n            this.mappedObjects.push(objects);\r\n\r\n            return this;\r\n        }\r\n        \r\n        for(let object of objects) {\r\n            if(this.mappedObjects.includes(object))\r\n                continue;\r\n\r\n            if(!object.data)\r\n                object.setDataEnabled();\r\n\r\n            let map = new this.Map({\r\n                object: object,\r\n                dynamic: dynamic,\r\n                segmentCount: segmentCount\r\n            });\r\n\r\n            object.data.set('raycasterMap', map);\r\n            this.mappedObjects.push(object);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    //remove mapped Objects\r\n    removeMappedObjects: function(objects) {\r\n        if(!Array.isArray(objects)) {\r\n            let index = this.mappedObjects.indexOf(objects);\r\n            if(index >= 0)\r\n                this.mappedObjects.splice(index, 1)\r\n            return this;\r\n        }\r\n\r\n        for(let object of objects) {\r\n            let index = this.mappedObjects.indexOf(object);\r\n            if(index >= 0)\r\n                this.mappedObjects.splice(index, 1)\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    //scene update event listener\r\n    update: function() {\r\n        //update dynamic maps\r\n        if(this.mappedObjects.length > 0)\r\n            for(let mapppedObject of this.mappedObjects) {\r\n                let map = mapppedObject.data.get('raycasterMap')\r\n                if(map.dynamic)\r\n                    map.updateMap();\r\n            }\r\n    },\r\n\r\n    //ray factory\r\n    createRay: function(options = {}) {\r\n        return new this.Ray(options, this);\r\n    }\r\n}\r\n\r\nRaycaster.prototype.Map = require('./map/map-core.js').Map;\r\nRaycaster.prototype.Ray = require('./ray/ray-core.js').Ray;\r\n"],"sourceRoot":""}