{"version":3,"sources":["webpack://PhaserRaycaster/webpack/universalModuleDefinition","webpack://PhaserRaycaster/webpack/bootstrap","webpack://PhaserRaycaster/./src/main.js","webpack://PhaserRaycaster/./src/map/config.js","webpack://PhaserRaycaster/./src/map/map-circle-methods.js","webpack://PhaserRaycaster/./src/map/map-core.js","webpack://PhaserRaycaster/./src/map/map-line-methods.js","webpack://PhaserRaycaster/./src/map/map-polygon-methods.js","webpack://PhaserRaycaster/./src/map/map-rectangle-methods.js","webpack://PhaserRaycaster/./src/map/segmentsCount.js","webpack://PhaserRaycaster/./src/ray/angle.js","webpack://PhaserRaycaster/./src/ray/cast.js","webpack://PhaserRaycaster/./src/ray/castCircle.js","webpack://PhaserRaycaster/./src/ray/castCone.js","webpack://PhaserRaycaster/./src/ray/cone.js","webpack://PhaserRaycaster/./src/ray/config.js","webpack://PhaserRaycaster/./src/ray/origin.js","webpack://PhaserRaycaster/./src/ray/range.js","webpack://PhaserRaycaster/./src/ray/ray-core.js","webpack://PhaserRaycaster/./src/ray/ray.js","webpack://PhaserRaycaster/./src/raycaster-core.js"],"names":["PhaserRaycaster","scene","systems","sys","settings","isBooted","events","once","boot","register","PluginManager","prototype","eventEmitter","on","start","preUpdate","update","postUpdate","pause","resume","sleep","wake","shutdown","destroy","test","name","console","log","time","delta","undefined","createRaycaster","options","_Raycaster","constructor","require","Raycaster","module","exports","config","object","type","getPoints","_getPolygonPoints","getSegments","_getPolygonSegments","updateMap","_updatePolygonMap","_getArcPoints","_getArcSegments","_updateArcMap","_getLinePoints","_getLineSegments","_updateLineMap","_getRectanglePoints","_getRectangleSegments","_updateRectangleMap","dynamic","segmentCount","ray","_points","length","points","offset","Phaser","Geom","Point","x","displayWidth","originX","y","displayHeight","originY","rayA","Line","rayB","c","rotation","vector","SetToAngle","Angle","Length","cB","getPointB","origin","rayLength","Math","sqrt","pow","radius","scaleX","angle","dAngle","asin","push","_segments","scaleY","geom","segments","newPoints","point","i","Map","active","_object","getIntersections","rectangle","line","polygon","arc","setSegmentCount","pointA","getPointA","pointB","vectorA","vectorB","closePath","last","getTopLeft","getTopRight","getBottomRight","getBottomLeft","count","setAngle","Normalize","_ray","range","setAngleDeg","DegToRad","cast","closestIntersection","closestDistance","_raycaster","boundingBox","intersections","Intersects","GetLineToRectangle","intersection","distance","Distance","Between","target","objects","mappedObjects","getBounds","map","data","get","segment","Equals","LineToLine","isTangent","circleIntersections","circle","Circle","GetLineToCircle","x1","y1","ignoreNotIntersectedRays","castCircle","originalAngle","maps","rayTargets","testedObjects","iLength","boundsInRange","j","jLength","objectB","mapB","RectangleToRectangle","segmentA","segmentB","sort","a","b","bind","intersectionA","intersectionB","castCone","cone","minAngle","maxAngle","angleOffset","coneDeg","angleOffsetDeg","RadToDeg","ShortestBetween","abs","setCone","setConeDeg","setTo","angleDeg","detectionRange","detectionRangeCircle","setOrigin","setRange","MAX_SAFE_INTEGER","setDetectionRange","bounds","objectBounds","CircleToRectangle","Ray","raycaster","setRay","version","graphics","sortedPoints","mapSegmentCount","physics","world","setOptions","add","lineStyle","width","color","fillStyle","mapGameObjects","setBoundingBox","height","Rectangle","left","top","right","bottom","Array","isArray","includes","setDataEnabled","set","removeMappedObjects","index","indexOf","splice","mapppedObject","createRay"],"mappings":"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","file":"phaser-raycaster.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"PhaserRaycaster\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PhaserRaycaster\"] = factory();\n\telse\n\t\troot[\"PhaserRaycaster\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","var PhaserRaycaster = function (scene)\r\n{\r\n    //The Scene that owns this plugin\r\n    this.scene = scene;\r\n\r\n    this.systems = scene.sys;\r\n\r\n    if (!scene.sys.settings.isBooted)\r\n    {\r\n        scene.sys.events.once('boot', this.boot, this);\r\n    }\r\n};\r\n\r\n//Static function called by the PluginFile Loader.\r\nPhaserRaycaster.register = function (PluginManager)\r\n{\r\n    //  Register this plugin with the PluginManager, so it can be added to Scenes.\r\n\r\n    //  The first argument is the name this plugin will be known as in the PluginManager. It should not conflict with already registered plugins.\r\n    //  The second argument is a reference to the plugin object, which will be instantiated by the PluginManager when the Scene boots.\r\n    //  The third argument is the local mapping. This will make the plugin available under `this.sys.base` and also `this.base` from a Scene if\r\n    //  it has an entry in the InjectionMap.\r\n    PluginManager.register('PhaserRaycaster', PhaserRaycaster, 'base');\r\n};\r\n\r\nPhaserRaycaster.prototype = {\r\n\r\n    //  Called when the Plugin is booted by the PluginManager.\r\n    //  If you need to reference other systems in the Scene (like the Loader or DisplayList) then set-up those references now, not in the constructor.\r\n    boot: function ()\r\n    {\r\n        var eventEmitter = this.systems.events;\r\n\r\n        //  Listening to the following events is entirely optional, although we would recommend cleanly shutting down and destroying at least.\r\n        //  If you don't need any of these events then remove the listeners and the relevant methods too.\r\n\r\n        eventEmitter.on('start', this.start, this);\r\n\r\n        eventEmitter.on('preupdate', this.preUpdate, this);\r\n        eventEmitter.on('update', this.update, this);\r\n        eventEmitter.on('postupdate', this.postUpdate, this);\r\n\r\n        eventEmitter.on('pause', this.pause, this);\r\n        eventEmitter.on('resume', this.resume, this);\r\n\r\n        eventEmitter.on('sleep', this.sleep, this);\r\n        eventEmitter.on('wake', this.wake, this);\r\n\r\n        eventEmitter.on('shutdown', this.shutdown, this);\r\n        eventEmitter.on('destroy', this.destroy, this);\r\n    },\r\n\r\n    //A test method.\r\n    test: function (name)\r\n    {\r\n        console.log('RaycasterPlugin says hello ' + name + '!');\r\n    },\r\n\r\n    //Called when a Scene is started by the SceneManager. The Scene is now active, visible and running.\r\n    start: function ()\r\n    {\r\n    },\r\n\r\n    //Called every Scene step - phase 1\r\n    preUpdate: function (time, delta)\r\n    {\r\n    },\r\n\r\n    //Called every Scene step - phase 2\r\n    update: function (time, delta)\r\n    {\r\n    },\r\n\r\n    //Called every Scene step - phase 3\r\n    postUpdate: function (time, delta)\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is paused. A paused scene doesn't have its Step run, but still renders.\r\n    pause: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is resumed from a paused state.\r\n    resume: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is put to sleep. A sleeping scene doesn't update or render, but isn't destroyed or shutdown. preUpdate events still fire.\r\n    sleep: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is woken from a sleeping state.\r\n    wake: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene shuts down, it may then come back again later (which will invoke the 'start' event) but should be considered dormant.\r\n    shutdown: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is destroyed by the Scene Manager. There is no coming back from a destroyed Scene, so clear up all resources here.\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n\r\n        this.scene = undefined;\r\n    },\r\n\r\n    //Create Raycaster object\r\n    createRaycaster: function(options = {}) {\r\n        options.scene = this.scene;\r\n        return new this._Raycaster(options);\r\n    }\r\n\r\n};\r\n\r\nPhaserRaycaster.prototype.constructor = PhaserRaycaster;\r\nPhaserRaycaster.prototype._Raycaster = require('./raycaster-core.js').Raycaster;\r\n\r\n//Make sure you export the plugin for webpack to expose\r\n\r\nmodule.exports = PhaserRaycaster;\r\n","/**\n * Configure map on creation.\n *\n * @function Map.config\n * @since 0.6.0\n *\n * @param {object} [options] - Ray's congfiguration options. May include:\n * - {object} object - Mapped game object\n * - {string} [type] - Map type. If not defined, will be determined from object\n * - {boolean} [dynamic] = false - If set true, map will be dynamic (updated on scene update event).\n * - {integer} [segmentCount] = 0 - Circle map's segment count. If set to 0, map won't be generating segments and relay only on generated tangent point to actually testing ray.\n *\n * @return {object} Map object.\n */\nexport function config(options) {\n    this.object = options.object;\n    //object type\n    if(options.type === undefined)\n        options.type = options.object.type;\n    this.type = options.type;\n\n    switch(options.type) {\n        case 'Polygon':\n            this.getPoints = this._getPolygonPoints;\n            this.getSegments = this._getPolygonSegments;\n            this.updateMap = this._updatePolygonMap;\n            break;\n        case 'Arc':\n            this.getPoints = this._getArcPoints;\n            this.getSegments = this._getArcSegments;\n            this.updateMap = this._updateArcMap;\n            break;\n        case 'Line':\n            this.getPoints = this._getLinePoints;\n            this.getSegments = this._getLineSegments;\n            this.updateMap = this._updateLineMap;\n            break;\n        default:\n            this.getPoints = this._getRectanglePoints;\n            this.getSegments = this._getRectangleSegments;\n            this.updateMap = this._updateRectangleMap;\n    }\n\n    //dynamic map\n    this.dynamic = (options.dynamic == true) ? true : false;\n    this.segmentCount = (options.segmentCount) ? options.segmentCount : 0;\n\n    return this;\n}\n","/*Map methods for circles*/\r\n/**\r\n * Get array of points on circle.\r\n *\r\n * @function Map._getArcPoints\r\n * @since 0.6.0\r\n *\r\n * @param {object} [ray] - Ray object. Used to generate points of rays tangent to circle, from ray origin.\r\n *\r\n * @return {array} Array of Phaser.GeomLine objects.\r\n */\r\nexport function getPoints(ray = false) {\r\n    if(this._points.length > 0)\r\n        return this._points;\r\n    \r\n    let points = [];\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * (this.object.originX - 0.5);\r\n    offset.y = this.object.y - this.object.displayHeight * (this.object.originY - 0.5);\r\n\r\n    //calculate tangent rays\r\n    if(ray) {\r\n        let rayA = new Phaser.Geom.Line();\r\n        let rayB = new Phaser.Geom.Line();\r\n        let c;\r\n        \r\n        let rotation = this.object.rotation;\r\n        \r\n        if(rotation !== 0) {\r\n            let vector = new Phaser.Geom.Line(this.object.x, this.object.y, offset.x, offset.y);\r\n            Phaser.Geom.Line.SetToAngle(vector, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\r\n            let cB = vector.getPointB();\r\n            c = new Phaser.Geom.Line(ray.origin.x, ray.origin.y, cB.x, cB.y);\r\n        }\r\n        else { \r\n            c = new Phaser.Geom.Line(ray.origin.x, ray.origin.y, offset.x, offset.y);\r\n        }\r\n\r\n        let rayLength = Math.sqrt(Math.pow(Phaser.Geom.Line.Length(c), 2) - Math.pow(this.object.radius * this.object.scaleX, 2));\r\n\r\n        //ray angle\r\n        let angle = Phaser.Geom.Line.Angle(c);\r\n        let dAngle = Math.asin((this.object.radius * this.object.scaleX) / Phaser.Geom.Line.Length(c));\r\n        Phaser.Geom.Line.SetToAngle(rayA, ray.origin.x, ray.origin.y, angle - dAngle, rayLength);\r\n        Phaser.Geom.Line.SetToAngle(rayB, ray.origin.x, ray.origin.y, angle + dAngle, rayLength);\r\n\r\n        //adding tangent points\r\n        points.push(rayA.getPointB());\r\n        points.push(rayB.getPointB());\r\n    }\r\n\r\n    return points;\r\n};\r\n\r\n/**\r\n * Get array of segments representing circle.\r\n *\r\n * @function Map._getArcSegments\r\n * @since 0.6.0\r\n *\r\n *\r\n * @return {array} Array of Phaser.Geom.Line objects.\r\n */\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n/**\r\n * Update circle's map of points and segments. If segmentCount == 0. Map is generated dynamically by calculating points of rays tangent to circle, from ray origin.\r\n *\r\n * @function Map._updateArcMap\r\n * @since 0.6.0\r\n *\r\n *\r\n * @return {object} Map object.\r\n */\r\nexport function updateMap() {\r\n    if(!this.segmentCount) {\r\n        this._points = [];\r\n        this._segments = [];\r\n        return this;\r\n    }\r\n    \r\n    //calculate offset based on object position and origin point\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * this.object.originX + this.object.radius * this.object.scaleX;\r\n    offset.y = this.object.y - this.object.displayHeight * this.object.originY + this.object.radius * this.object.scaleY;\r\n\r\n    //get points surrounding circle\r\n    let points = this.object.geom.getPoints(this.segmentCount);\r\n    let segments = []\r\n\r\n    //set points\r\n    //calculate positions after object's rotation\r\n    let rotation = this.object.rotation;\r\n    if(rotation !== 0) {\r\n        let newPoints = [];\r\n        for(let point of points) {\r\n            let vector = new Phaser.Geom.Line(this.object.x, this.object.y, this.object.x + (point.x + this.object.radius) * this.object.scaleX, this.object.y + (point.y + this.object.radius) * this.object.scaleY);\r\n            Phaser.Geom.Line.SetToAngle(vector, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\r\n            newPoints.push(vector.getPointB());\r\n        }\r\n        points = newPoints;\r\n    }\r\n    //if rotation === 0\r\n    else {\r\n        for(let point of points) {\r\n            point.x = point.x * this.object.scaleX + offset.x;\r\n            point.y = point.y * this.object.scaleY + offset.y;\r\n        }\r\n    }\r\n\r\n    //set segments\r\n    for(let i = 0, length = points.length; i < length; i++) {\r\n        if(i+1 < length)\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));\r\n        else\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[0].x, points[0].y));\r\n    }\r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n    return this;\r\n};\r\n","/**\r\n * @classdesc\r\n *\r\n * Map class responible for mapping game objects.\r\n *\r\n * @class Map\r\n * @memberof Raycaster\r\n * @constructor\r\n * @since 6.0.0\r\n *\r\n * @param {object} options - Map specific configuration settings.\r\n * @param {Raycaster} [raycaster] - Parent raycaster object.\r\n */\r\nexport function Map(options) {\r\n    this.type;\r\n    this.active;\r\n    this.dynamic;\r\n    this._object;\r\n    this._points = [];\r\n    this._segments = [];\r\n    this.getPoints;\r\n    this.getSegments;\r\n    this.getIntersections;\r\n    this.segmentCount = 0;\r\n\r\n    this.config(options);\r\n    this.updateMap();\r\n\r\n    return this;\r\n};\r\n\r\nlet rectangle = require('./map-rectangle-methods.js');\r\nlet line = require('./map-line-methods.js');\r\nlet polygon = require('./map-polygon-methods.js');\r\nlet arc = require('./map-circle-methods.js');\r\n\r\nMap.prototype = {\r\n    config: require('./config.js').config,\r\n    setSegmentCount: require('./segmentsCount.js').setSegmentCount,\r\n    //methods for rectangle maps\r\n    _getRectanglePoints: rectangle.getPoints,\r\n    _getRectangleSegments: rectangle.getSegments,\r\n    _updateRectangleMap: rectangle.updateMap,\r\n    //methods for line maps\r\n    _getLinePoints: line.getPoints,\r\n    _getLineSegments: line.getSegments,\r\n    _updateLineMap: line.updateMap,\r\n    //methods for polygon maps\r\n    _getPolygonPoints: polygon.getPoints,\r\n    _getPolygonSegments: polygon.getSegments,\r\n    _updatePolygonMap: polygon.updateMap,\r\n    //methods for circle maps\r\n    _getArcPoints: arc.getPoints,\r\n    _getArcSegments: arc.getSegments,\r\n    _updateArcMap: arc.updateMap\r\n};\r\n","/*Map methods for lines*/\r\n/**\r\n * Get array of points for line.\r\n *\r\n * @function Map._getLinePoints\r\n * @since 0.6.0\r\n *\r\n * @param {object} [ray] - Ray object.\r\n *\r\n * @return {array} Array of points.\r\n */\r\nexport function getPoints(ray = false) {\r\n    return this._points;\r\n};\r\n\r\n/**\r\n * Get array of segments representing line.\r\n *\r\n * @function Map._getLineSegments\r\n * @since 0.6.0\r\n *\r\n *\r\n * @return {array} Array of Phaser.Geom.Line objects.\r\n */\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n/**\r\n * Update line's map of points and segments.\r\n *\r\n * @function Map._updateLineMap\r\n * @since 0.6.0\r\n *\r\n *\r\n * @return {object} Map object.\r\n */\r\nexport function updateMap() {\r\n    let points = [];\r\n    let segments = [];\r\n    \r\n    //calculate offset based on object position and origin point\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * this.object.originX;\r\n    offset.y = this.object.y - this.object.displayHeight * this.object.originY;\r\n    let pointA = this.object.geom.getPointA();\r\n    let pointB = this.object.geom.getPointB();\r\n\r\n    //calculate positions after object's rotation\r\n    let rotation = this.object.rotation;\r\n    if(rotation !== 0) {\r\n        let vectorA = new Phaser.Geom.Line(this.object.x, this.object.y, pointA.x * this.object.scaleX + offset.x, pointA.y * this.object.scaleY + offset.y);\r\n        Phaser.Geom.Line.SetToAngle(vectorA, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vectorA) + rotation, Phaser.Geom.Line.Length(vectorA));\r\n        pointA = vectorA.getPointB();\r\n\r\n        let vectorB = new Phaser.Geom.Line(this.object.x, this.object.y, pointB.x * this.object.scaleX + offset.x, pointB.y * this.object.scaleY + offset.y);\r\n        Phaser.Geom.Line.SetToAngle(vectorB, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vectorB) + rotation, Phaser.Geom.Line.Length(vectorB));\r\n        pointB = vectorB.getPointB();\r\n\r\n        //set points\r\n        points.push(new Phaser.Geom.Point(pointA.x, pointA.y));\r\n        points.push(new Phaser.Geom.Point(pointB.x, pointB.y));\r\n        //set segment\r\n        segments.push(new Phaser.Geom.Line(pointA.x, pointA.y, pointB.x, pointB.y));\r\n    }\r\n    //if rotation === 0\r\n    else {\r\n        //set points\r\n        points.push(new Phaser.Geom.Point(pointA.x * this.object.scaleX + offset.x, pointA.y * this.object.scaleY + offset.y));\r\n        points.push(new Phaser.Geom.Point(pointB.x * this.object.scaleX + offset.x, pointB.y * this.object.scaleY + offset.y));\r\n        //set segment\r\n        segments.push(new Phaser.Geom.Line(pointA.x + offset.x, pointA.y + offset.y, pointB.x + offset.x, pointB.y + offset.y));\r\n    }\r\n    \r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n    return this;\r\n};\r\n","/*Map methods for polygons*/\r\n/**\r\n * Get array of polygon's points.\r\n *\r\n * @function Map._getPolygonPoints\r\n * @since 0.6.0\r\n *\r\n * @param {object} [ray] - Ray object.\r\n *\r\n * @return {array} Array of points.\r\n */\r\nexport function getPoints(ray = false) {\r\n    return this._points;\r\n};\r\n\r\n/**\r\n * Get array of segments representing polygon.\r\n *\r\n * @function Map._getPolygonSegments\r\n * @since 0.6.0\r\n *\r\n *\r\n * @return {array} Array of Phaser.Geom.Line objects.\r\n */\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n/**\r\n * Update polygon's map of points and segments.\r\n *\r\n * @function Map._updatePolygonMap\r\n * @since 0.6.0\r\n *\r\n *\r\n * @return {object} Map object.\r\n */\r\nexport function updateMap() {\r\n    let points = [];\r\n    let segments = [];\r\n    \r\n    //calculate offset based on object position and origin point\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * this.object.originX;\r\n    offset.y = this.object.y - this.object.displayHeight * this.object.originY;\r\n    //set points\r\n    //calculate positions after object's rotation\r\n    let rotation = this.object.rotation;\r\n    if(rotation !== 0) {\r\n        for(let point of this.object.geom.points) {\r\n            let vector = new Phaser.Geom.Line(this.object.x, this.object.y, point.x * this.object.scaleX + offset.x, point.y * this.object.scaleY + offset.y);\r\n            Phaser.Geom.Line.SetToAngle(vector, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\r\n            points.push(vector.getPointB());\r\n        }\r\n    }\r\n    //if rotation === 0\r\n    else {\r\n        for(let point of this.object.geom.points) {\r\n            points.push(new Phaser.Geom.Point(point.x * this.object.scaleX + offset.x, point.y * this.object.scaleY + offset.y));\r\n        }\r\n    }\r\n\r\n    //set segments\r\n    for(let i = 0, length = points.length; i < length; i++) {\r\n        if(i+1 < length)\r\n            segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));   \r\n    }\r\n    //if polygon is closed\r\n    if(this.object.closePath) {\r\n        let last = points.length - 1;\r\n        segments.push(new Phaser.Geom.Line(points[last].x, points[last].y, points[0].x, points[0].y));\r\n    }\r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n\r\n    return this;\r\n};\r\n","/*Map methods for rectangles*/\r\n/**\r\n * Get array of rectangle's points.\r\n *\r\n * @function Map._getRectanglePoints\r\n * @since 0.6.0\r\n *\r\n * @param {object} [ray] - Ray object.\r\n *\r\n * @return {array} Array of points.\r\n */\r\nexport function getPoints(ray = false) {\r\n    return this._points;\r\n};\r\n\r\n/**\r\n * Get array of segments representing rectangle.\r\n *\r\n * @function Map._getRectangleSegments\r\n * @since 0.6.0\r\n *\r\n *\r\n * @return {array} Array of Phaser.Geom.Line objects.\r\n */\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n/**\r\n * Update rectangle's map of points and segments.\r\n *\r\n * @function Map._updateRectangleMap\r\n * @since 0.6.0\r\n *\r\n *\r\n * @return {object} Map object.\r\n */\r\nexport function updateMap() {\r\n    let points = [];\r\n    let segments = [];\r\n\r\n    //set points\r\n    points = [\r\n        this.object.getTopLeft(),\r\n        this.object.getTopRight(),\r\n        this.object.getBottomRight(),\r\n        this.object.getBottomLeft()\r\n    ];\r\n\r\n    //set segments\r\n    for(let i = 0, length = points.length; i < length; i++) {\r\n        if(i+1 < length)\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));\r\n        else\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[0].x, points[0].y));\r\n    }\r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n\r\n    return this;\r\n};\r\n","/**\n * Set segment count for cirle's map.\n *\n * @function Map.setSegmentCount\n * @since 0.6.0\n *\n * @param {integer} [count] - Circle's map segments count.\n *\n * @return {object} Map object.\n */\nexport function setSegmentCount(count) {\n    this.segmentCount = count;\n        this.updateMap();\n        return this;\n}\n","/**\n * Set ray angle in radians.\n *\n * @function Ray.setAngle\n * @since 0.6.0\n *\n * @param {float} [angle] - Ray's angle in radians.\n *\n * @return {object} Ray object.\n */\nexport function setAngle(angle = 0) {\n    this.angle = Phaser.Math.Angle.Normalize(angle);\n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    return this;\n}\n\n/**\n * Set ray angle in degrees.\n *\n * @function Ray.setAngleDeg\n * @since 0.6.1\n *\n * @param {float} [angle] - Ray's angle in degrees.\n *\n * @return {object} Ray object.\n */\nexport function setAngleDeg(angle = 0) {\n    this.angle = Phaser.Math.Angle.Normalize(Phaser.Math.DegToRad(angle));\n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    return this;\n}\n","/**\n * Cast ray to find closest intersection with tested mapped objects.\n *\n * @function Ray.cast\n * @since 0.6.0\n *\n * @param {object} [options] - options that may include:\n * - {array} [objects] - Array of game objects to test. If not provided use all mapped game objects.\n * - {Phaser.Types.Math.Vector2Like} [target] - Ray's target point. Used in other casting methods to determine if ray was targeting mapped objects point.\n *\n * @return {Phaser.Types.Math.Vector2Like} / {boolean} - Point object of ray's closest intersection with tested objects. Returns false if no intersection has been found.\n */\nexport function cast(options = {}) {\n    let closestIntersection;\n    let closestDistance = this.range;\n    //if bounding box is defined check bounding box intersection\n    if(this._raycaster && this._raycaster.boundingBox) {\n        let intersections = [];\n        Phaser.Geom.Intersects.GetLineToRectangle(this._ray, this._raycaster.boundingBox.rectangle, intersections);\n        if(intersections.length === 1)\n            closestIntersection = intersections[0];\n        else if(intersections.length > 1) {\n            for(let intersection of intersections) {\n                let distance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, intersection.x, intersection.y);\n                if(distance < closestDistance) {\n                    closestDistance = distance;\n                    closestIntersection = intersection;\n                }\n            }\n        }\n        //if ray target is declared\n        else if(options.target){\n            let distance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, options.target.x, options.target.y);\n            //if target is within ray range\n            if(this.range > distance) {\n                closestDistance = distance;\n                closestIntersection = options.target;\n            }\n        }\n    }\n\n    //if no objects to cast ray were passed, use raycasters mapped objects\n    if(!options.objects) {\n        if(this._raycaster)\n            options.objects = this._raycaster.mappedObjects;\n        else\n            return intersections;\n    }\n    \n    for(let object of options.objects) {\n        //check if object is intersected by ray\n        if(!Phaser.Geom.Intersects.GetLineToRectangle(this._ray, object.getBounds()))\n            continue;\n\n        let map = object.data.get('raycasterMap');\n        \n        //check intersections\n        for(let segment of map.getSegments()) {\n            let intersection = [];\n\n            //if target point is segmemt point\n            if(options.target) {\n                if(\n                    Phaser.Geom.Point.Equals(options.target, segment.getPointA())\n                    || Phaser.Geom.Point.Equals(options.target, segment.getPointB())\n                ) {\n                    intersection = options.target;\n                }\n                else if(!Phaser.Geom.Intersects.LineToLine(this._ray, segment, intersection))\n                    continue;\n            }\n            //if no intersection continue\n            else if(!Phaser.Geom.Intersects.LineToLine(this._ray, segment, intersection))\n              continue;\n            \n            //get closest intersection\n            let distance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, intersection.x, intersection.y);\n            if(distance < closestDistance) {\n                closestDistance = distance;\n                closestIntersection = intersection;\n            }\n        }\n\n        //check arc intersections if its not\n        if(map.type === 'Arc') {\n           //if arc has generated points (besides tangent points to ray)\n            if(map._points.length > 0) {\n                continue;\n            }\n            \n            //check if target point is a circle tangent point to ray\n            if(options.target) {\n                let points = map.getPoints(this);\n                let isTangent = false;\n                for(let point of points) {\n\n                    if(Phaser.Geom.Point.Equals(options.target, point)) {\n                        //get closest intersection\n                        let distance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, point.x, point.y);\n\n                        if(distance < closestDistance) {\n                            closestDistance = distance;\n                            closestIntersection = point;\n                            isTangent = true;\n                            break;\n                        }\n                    }\n                }\n\n                if(isTangent)\n                    continue;\n            }\n\n            let circleIntersections = [];\n            let offset = new Phaser.Geom.Point();\n            offset.x = map.object.x - map.object.displayWidth * (map.object.originX - 0.5);\n            offset.y = map.object.y - map.object.displayHeight * (map.object.originY - 0.5);\n\n            //calculate circle's center after rotation\n            let rotation = map.object.rotation;\n            if(rotation !== 0) {\n                let vector = new Phaser.Geom.Line(map.object.x, map.object.y, offset.x, offset.y);\n                Phaser.Geom.Line.SetToAngle(vector, map.object.x, map.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\n                let cB = vector.getPointB();\n                offset.x = cB.x;\n                offset.y = cB.y;\n            }\n\n            //create transformed circle\n            let circle = new Phaser.Geom.Circle(offset.x, offset.y, map.object.radius * map.object.scaleX);\n\n            if(Phaser.Geom.Intersects.GetLineToCircle(this._ray, circle, circleIntersections)) {\n                for(let intersection of circleIntersections) {\n                    //get closest intersection\n                    let distance = Phaser.Math.Distance.Between(this._ray.x1, this._ray.y1, intersection.x, intersection.y);\n\n                    if(distance < closestDistance) {\n\n                        closestDistance = distance;\n                        closestIntersection = intersection;\n                    }\n                }\n            }\n        }\n    }\n\n    if(!closestIntersection)\n        return (this.ignoreNotIntersectedRays) ? false : this._ray.getPointB();\n    return new Phaser.Geom.Point(closestIntersection.x, closestIntersection.y);\n}\n","/**\n * Cast ray in all directions to find closest intersections with tested mapped objects.\n *\n * @function Ray.castCircle\n * @since 0.6.0\n *\n * @param {object} [options] - options that may include:\n * - {array} [objects] - Array of game objects to test. If not provided use all mapped game objects.\n *\n * @return {array} - Array of Point objects of ray's closest intersections with tested objects.\n */\nexport function castCircle(options = {}) {\n    let originalAngle = this.angle;\n    let intersections = [];\n    let maps = [];\n    let rayTargets = [];\n    let testedObjects = [];\n\n    //if no objects to cast ray were passed, use raycasters mapped objects\n    if(!options.objects) {\n        if(this._raycaster)\n            options.objects = this._raycaster.mappedObjects;\n        else\n            return intersections;\n\n        //if bounding box is defined add bounding box points to \n        if(this._raycaster && this._raycaster.boundingBox) {\n            for(let point of this._raycaster.boundingBox.points) {\n                rayTargets.push({\n                    point: point,\n                    angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y)\n                });\n            }\n        }\n\n        for(let i=0, iLength = options.objects.length; i < iLength; i++) {\n            let object = options.objects[i];\n            //if bound in range\n            if(!this.boundsInRange(object))\n                continue;\n            \n            testedObjects.push(object);\n\n            let map = object.data.get('raycasterMap');\n            maps.push(map);\n            //get points and angles\n            for(let point of map.getPoints(this)) {\n                rayTargets.push({\n                    point: point,\n                    angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y)\n                });\n            }\n\n            //get objects intersections\n            for(let j = i+1, jLength = options.objects.length; j < jLength; j++){\n                let objectB = options.objects[j];\n                let mapB = objectB.data.get('raycasterMap');\n                //check if bounding boxes overlap\n                if(!Phaser.Geom.Intersects.RectangleToRectangle(object.getBounds(), objectB.getBounds()))\n                    continue;\n                \n                //find objects intersections\n                for(let segmentA of map.getSegments()) {\n                    for(let segmentB of mapB.getSegments()) {\n                        let intersection = [];\n                        if(!Phaser.Geom.Intersects.LineToLine(segmentA, segmentB, intersection))\n                            continue;\n                        \n                        rayTargets.push({\n                            point: new Phaser.Geom.Point(intersection.x, intersection.y),\n                            angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, intersection.x, intersection.y)\n                        });\n                    }\n                }\n            }\n        }\n\n        //sort target points by angle\n        rayTargets.sort(function(a, b){\n            //if rays towards points have the same angles promote closer one\n            if(a.angle == b.angle) {\n                if(Phaser.Math.Distance.Between(this.origin.x, this.origin.y, a.point.x, a.point.y) < Phaser.Math.Distance.Between(this.origin.x, this.origin.y, b.point.x, b.point.y))\n                    return 1;\n                else\n                    return -1;\n            }\n\n            return a.angle - b.angle;\n        }.bind(this));\n\n        //cast rays\n        for(let target of rayTargets){\n            this.setAngle(target.angle);\n            let intersection = this.cast({\n                objects: testedObjects,\n                target: target.point\n            });\n            if(intersection){\n                //if intersection hits target point cast two additional rays\n                if(Phaser.Geom.Point.Equals(target.point, intersection)) {\n                    this.setAngle(target.angle - 0.0001);\n                    let intersectionA = this.cast({\n                        objects: testedObjects\n                    });\n                    if(intersectionA)\n                        intersections.push(intersectionA);\n                    \n                    intersections.push(intersection);\n\n                    this.setAngle(target.angle + 0.0001);\n                    let intersectionB = this.cast({\n                        objects: testedObjects\n                    });\n                    if(intersectionB)\n                        intersections.push(intersectionB);\n\n                    continue;\n                }\n                intersections.push(intersection);\n            }\n        }\n    }\n\n    this.setAngle(originalAngle);\n    return intersections;\n}\n","/**\n * Cast ray in cone to find closest intersections with tested mapped objects.\n *\n * @function Ray.castCone\n * @since 0.7.0\n *\n * @param {object} [options] - options that may include:\n * - {array} [objects] - Array of game objects to test. If not provided use all mapped game objects.\n *\n * @return {array} - Array of Point objects of ray's closest intersections with tested objects.\n */\nexport function castCone(options = {}) {\n    let originalAngle = this.angle;\n    let intersections = [];\n    let maps = [];\n    let rayTargets = [];\n    let testedObjects = [];\n    let cone = this.cone;\n    let minAngle = 0;\n    let maxAngle = 0;\n    let angleOffset = 0;\n\n    //set cone\n    if(options.cone !== undefined)\n        cone = options.cone;\n    if(options.coneDeg !== undefined)\n        cone = Phaser.Math.DegToRad(options.coneDeg);\n\n    //set cone min and max angle\n    minAngle = this.angle - cone / 2;\n    maxAngle = this.angle + cone / 2;\n\n    //add min and max angle points\n    this.setAngle(minAngle);\n    rayTargets.push({\n        point: this._ray.getPointB(),\n        angle: minAngle,\n        angleOffsetDeg: Phaser.Math.RadToDeg(-cone / 2)\n    });\n\n    this.setAngle(maxAngle);\n    rayTargets.push({\n        point: this._ray.getPointB(),\n        angle: maxAngle,\n        angleOffsetDeg: Phaser.Math.RadToDeg(cone / 2)\n    });\n\n    //if no objects to cast ray were passed, use raycasters mapped objects\n    if(!options.objects) {\n        if(this._raycaster)\n            options.objects = this._raycaster.mappedObjects;\n        else\n            return intersections;\n\n        //if bounding box is defined add bounding box points to \n        if(this._raycaster && this._raycaster.boundingBox) {\n            for(let point of this._raycaster.boundingBox.points) {\n\n                let angle = Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y);\n                let angleOffsetDeg = Phaser.Math.Angle.ShortestBetween(Phaser.Math.RadToDeg(angle), Phaser.Math.RadToDeg(originalAngle));\n\n                if(Math.abs(angleOffsetDeg) < Phaser.Math.RadToDeg(cone / 2)) {\n                    rayTargets.push({\n                        point: point,\n                        angle: angle,\n                        angleOffsetDeg: -angleOffsetDeg\n                    });\n                }\n            }\n        }\n    }\n\n    for(let i=0, iLength = options.objects.length; i < iLength; i++) {\n        let object = options.objects[i];\n        //if bound in range\n        if(!this.boundsInRange(object))\n            continue;\n        \n        testedObjects.push(object);\n\n        let map = object.data.get('raycasterMap');\n        maps.push(map);\n        //get points and angles\n        for(let point of map.getPoints(this)) {\n\n            let angle = Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y);\n            let angleOffsetDeg = Phaser.Math.Angle.ShortestBetween(Phaser.Math.RadToDeg(angle), Phaser.Math.RadToDeg(originalAngle));\n\n            if(Math.abs(angleOffsetDeg) < Phaser.Math.RadToDeg(cone / 2)) {\n                rayTargets.push({\n                    point: point,\n                    angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y),\n                    angleOffsetDeg: -angleOffsetDeg\n                });\n            }\n        }\n\n        //get objects intersections\n        for(let j = i+1, jLength = options.objects.length; j < jLength; j++){\n            let objectB = options.objects[j];\n            let mapB = objectB.data.get('raycasterMap');\n            //check if bounding boxes overlap\n            if(!Phaser.Geom.Intersects.RectangleToRectangle(object.getBounds(), objectB.getBounds()))\n                continue;\n            \n            //find objects intersections\n            for(let segmentA of map.getSegments()) {\n                for(let segmentB of mapB.getSegments()) {\n                    let intersection = [];\n                    if(!Phaser.Geom.Intersects.LineToLine(segmentA, segmentB, intersection))\n                        continue;\n                    let angle = Phaser.Math.Angle.Between(this.origin.x, this.origin.y, intersection.x, intersection.y);\n                    let angleOffsetDeg = Phaser.Math.Angle.ShortestBetween(Phaser.Math.RadToDeg(angle), Phaser.Math.RadToDeg(originalAngle));\n\n                    if(Math.abs(angleOffsetDeg) < Phaser.Math.RadToDeg(cone / 2)) {\n                        rayTargets.push({\n                            point: new Phaser.Geom.Point(intersection.x, intersection.y),\n                            angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, intersection.x, intersection.y),\n                            angleOffsetDeg: -angleOffsetDeg\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    //sort target points by angle\n    rayTargets.sort(function(a, b){\n        //if rays towards points have the same angles promote closer one\n        if(a.angle == b.angle) {\n            if(Phaser.Math.Distance.Between(this.origin.x, this.origin.y, a.point.x, a.point.y) < Phaser.Math.Distance.Between(this.origin.x, this.origin.y, b.point.x, b.point.y))\n                return 1;\n            else\n                return -1;\n        }\n\n        return a.angleOffsetDeg - b.angleOffsetDeg;\n    }.bind(this));\n\n    //cast rays\n    for(let target of rayTargets){\n        this.setAngle(target.angle);\n        let intersection = this.cast({\n            objects: testedObjects,\n            target: target.point\n        });\n        if(intersection){\n            //if intersection hits target point cast two additional rays\n            if(Phaser.Geom.Point.Equals(target.point, intersection)) {\n                this.setAngle(target.angle - 0.0001);\n                let intersectionA = this.cast({\n                    objects: testedObjects\n                });\n                if(intersectionA)\n                    intersections.push(intersectionA);\n                \n                intersections.push(intersection);\n\n                this.setAngle(target.angle + 0.0001);\n                let intersectionB = this.cast({\n                    objects: testedObjects\n                });\n                if(intersectionB)\n                    intersections.push(intersectionB);\n\n                continue;\n            }\n            intersections.push(intersection);\n        }\n    }\n\n    this.setAngle(originalAngle);\n    return intersections;\n}\n","/**\n * Set ray's cone angle in radians.\n *\n * @function Ray.setAngle\n * @since 0.7.0\n *\n * @param {float} [cone] - Ray's cone angle in radians.\n *\n * @return {object} Ray object.\n */\nexport function setCone(cone = 0) {\n    this.cone = cone;\n    return this;\n}\n\n/**\n * Set ray's cone angle in degrees.\n *\n * @function Ray.setAngleDeg\n * @since 0.7.0\n *\n * @param {float} [cone] - Ray's cone angle in degrees.\n *\n * @return {object} Ray object.\n */\nexport function setConeDeg(cone = 0) {\n    this.cone = Phaser.Math.DegToRad(cone);\n    return this;\n}\n","/**\n * Configure ray on creation.\n *\n * @function Ray.config\n * @since 0.6.0\n *\n * @param {object} [options] - Ray's congfiguration options. May include:\n * - {Phaser.Types.Math.Vector2Like} [origin] = {x:0, y:0} - Ray's position.\n * - {float} [angle] = 0 - Ray's angle in radians.\n * - {float} [angleDeg] = 0 - Ray's angle in degrees.\n * - {float} [cone] = 0 - Ray's cone angle in radians.\n * - {float} [coneDeg] = 0 - Ray's cone angle in degrees.\n * - {integer} [range] = Phaser.Math.MAX_SAFE_INTEGER - Ray's range.\n * - {integer} [detectionRange] = Phaser.Math.MAX_SAFE_INTEGER - Maximum distance between ray's position and tested objects bounding boxes.\n * - {boolean} [ignoreNotIntersectedRays] = true - If set true, ray returns false when it didn't hit anything. Otherwise returns ray's target.\n *\n * @return {object} Ray object.\n */\nexport function config(options) {\n    this.object = options.object;\n    //origin\n    if(options.origin)\n        this.origin.setTo(options.origin.x, options.origin.y);\n\n    //angle\n    if(options.angle)\n        this.angle = Phaser.Math.Angle.Normalize(options.angle);\n\n    //angle deg\n    if(options.angleDeg)\n        this.angle = Phaser.Math.Angle.Normalize(Phaser.Math.DegToRad(options.angleDeg));\n\n    //cone angle\n    if(options.cone)\n        this.cone = options.cone;\n\n    //cone angle deg\n    if(options.coneDeg)\n        this.cone = Phaser.Math.DegToRad(options.coneDeg);\n\n    //range (0 = max)\n    if(options.range)\n        this.range = options.range;\n\n    //detection range (0 = max)\n    if(options.detectionRange)\n        this.detectionRange = options.detectionRange;\n\n    if(options.ignoreNotIntersectedRays !== undefined)\n        this.ignoreNotIntersectedRays = (options.ignoreNotIntersectedRays == true)\n    \n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    this.detectionRangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\n\n    return this;\n}\n","/**\n * Set ray's position.\n *\n * @function Ray.setOrigin\n * @since 0.6.0\n *\n * @param {integer} x - X coordinate.\n * @param {integer} y - Y coordinate.\n *\n * @return {object} Ray object.\n */\nexport function setOrigin(x, y) {\n    this.origin.setTo(x, y);\n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    this.detectionRangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\n    return this;\n}\n","/**\n * Set ray's range.\n *\n * @function Ray.setRange\n * @since 0.6.0\n *\n * @param {integer} [range] = Phaser.Math.MAX_SAFE_INTEGER - Ray's range.\n *\n * @return {object} Ray object.\n */\nexport function setRange(range = Phaser.Math.MAX_SAFE_INTEGER) {\n    this.range = range;\n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    return this;\n}\n\n/**\n * Set ray's range.\n *\n * @function Ray.setRange\n * @since 0.6.0\n *\n * @param {integer} [detectionRange] = Phaser.Math.MAX_SAFE_INTEGER - Maximum distance between ray's position and tested objects bounding boxes.\n *\n * @return {object} Ray object.\n */\nexport function setDetectionRange(detectionRange = 0) {\n    this.detectionRange = detectionRange;\n    this.detectionRangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\n    return this;\n}\n\n/**\n * Test if object's bounding box is in ray's detection range.\n *\n * @function Ray.boundsInRange\n * @since 0.6.0\n *\n * @param {object} object - Tested object\n * @param {Phaser.Geom. Rectangle} / {boolean} [bounds] = false - Tested object's bounds. If not passed bounds will be generated.\n *\n * @return {boolean} Information if object is in ray's detection range.\n */\nexport function boundsInRange(object, bounds = false) {\n    if(!this.detectionRange)\n        return true;\n\n    let objectBounds;\n    if(bounds)\n        objectBounds = bounds;\n    else\n        objectBounds = object.getBounds();\n\n    if(Phaser.Geom.Intersects.CircleToRectangle(this.detectionRangeCircle, objectBounds))\n        return true;\n\n    return false;\n}\n","/**\r\n * @classdesc\r\n *\r\n * Ray class responible for casting ray's and testing their collisions with mapped objects.\r\n *\r\n * @class Ray\r\n * @memberof Raycaster\r\n * @constructor\r\n * @since 6.0.0\r\n *\r\n * @param {object} options - Ray specific configuration settings.\r\n * @param {Raycaster} [raycaster] - Parent raycaster object.\r\n */\r\nexport function Ray(options, raycaster) {\r\n    this.origin = new Phaser.Geom.Point();\r\n    this._ray = new Phaser.Geom.Line();\r\n    this.angle = 0;\r\n    this.cone = 0;\r\n    this.range = Phaser.Math.MAX_SAFE_INTEGER;\r\n    this.detectionRange = 0;\r\n    this.detectionRangeCircle = new Phaser.Geom.Circle();\r\n    this.ignoreNotIntersectedRays = true;\r\n    this.intersections = [];\r\n    this._raycaster = raycaster ? raycaster : false;\r\n\r\n    this.config(options);\r\n};\r\n\r\nRay.prototype = {\r\n    config: require('./config.js').config,\r\n    setRay: require('./ray.js').setRay,    \r\n    setOrigin: require('./origin.js').setOrigin,\r\n    setRange: require('./range.js').setRange,\r\n    setAngle: require('./angle.js').setAngle,\r\n    setAngleDeg: require('./angle.js').setAngleDeg,\r\n    setCone: require('./cone.js').setCone,\r\n    setConeDeg: require('./cone.js').setConeDeg,\r\n    setDetectionRange: require('./range.js').setDetectionRange,\r\n    boundsInRange: require('./range.js').boundsInRange,\r\n    cast: require('./cast.js').cast,\r\n    castCircle: require('./castCircle.js').castCircle,\r\n    castCone: require('./castCone.js').castCone\r\n};\r\n","/**\n * Set ray's position, direction (angle) and range.\n *\n * @function Ray.setAngle\n * @since 0.6.0\n *\n * @param {integer} x - X coordinate.\n * @param {integer} y - Y coordinate.\n * @param {float} [angle] - Ray's angle in radians.\n * @param {integer} [range] = Phaser.Math.MAX_SAFE_INTEGER - Ray's range.\n *\n * @return {object} Ray object.\n */\nexport function setRay(x, y, angle, range = Phaser.Math.MAX_SAFE_INTEGER) {\n    this.origin.setTo(x, y);\n    this.angle = Phaser.Math.Angle.Normalize(angle);\n    this.range = range;\n\n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    this.detectionRangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\n    return this;\n}\n","/**\r\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\r\n* @copyright    2020 Marcin Walczak\r\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\r\n*/\r\n\r\n/**\r\n * @classdesc\r\n *\r\n * Raycaster class responible for creating ray objects and managing mapped objects.\r\n *\r\n * @class Raycaster\r\n * @constructor\r\n * @since 6.0.0\r\n *\r\n * @param {object} options - Ray specific configuration settings.\r\n */\r\nexport function Raycaster(options) {\r\n    this.version = '0.7.0';\r\n    this.scene;\r\n    this.graphics;\r\n    this.boundingBox = false;\r\n    this.mappedObjects = [];\r\n    this.sortedPoints = [];\r\n    this.mapSegmentCount = 0;   //quantity of segments of map of circle\r\n\r\n    if(options !== undefined) {\r\n        if(options.boundingBox === undefined && options.scene !== undefined && options.scene.physics !== undefined)\r\n            options.boundingBox = options.scene.physics.world.bounds;\r\n\r\n        this.setOptions(options);\r\n    }\r\n\r\n    //update event\r\n    this.scene.events.on('update', this.update.bind(this));\r\n\r\n    return this;\r\n}\r\n\r\nRaycaster.prototype = {\r\n    //set options\r\n    setOptions: function(options) {\r\n        if(options.scene !== undefined) {\r\n            this.scene = options.scene;\r\n            this.graphics =  this.scene.add.graphics({ lineStyle: { width: 1, color: 0x00ff00}, fillStyle: { color: 0xff00ff } });\r\n        }\r\n\r\n        if(options.mapSegmentCount !== undefined)\r\n            this.mapSegmentCount = options.mapSegmentCount;\r\n\r\n        if(options.objects !== undefined)\r\n            this.mapGameObjects(options.objects);\r\n\r\n        if(options.boundingBox !== undefined)\r\n            this.setBoundingBox(options.boundingBox.x, options.boundingBox.y, options.boundingBox.width, options.boundingBox.height)\r\n\r\n        return this;\r\n    },\r\n\r\n    //set bounding box\r\n    setBoundingBox: function(x, y, width, height) {\r\n        this.boundingBox = {\r\n            rectangle: new Phaser.Geom.Rectangle(x, y, width, height),\r\n            points: [],\r\n            segments: []\r\n        }\r\n        //set points\r\n        let points = [\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.left, this.boundingBox.rectangle.top),\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.right, this.boundingBox.rectangle.top),\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.right, this.boundingBox.rectangle.bottom),\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.left, this.boundingBox.rectangle.bottom)\r\n        ];\r\n\r\n        this.boundingBox.points = points;\r\n\r\n        //set segments\r\n        for(let i = 0, length = this.boundingBox.points.length; i < length; i++) {\r\n            if(i+1 < length)\r\n            this.boundingBox.segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));\r\n            else\r\n            this.boundingBox.segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[0].x, points[0].y));\r\n        }\r\n    },\r\n\r\n    //map object\r\n    mapGameObjects: function(objects, dynamic = false, segmentCount = this.mapSegmentCount) {\r\n        if(!Array.isArray(objects)) {\r\n            if(this.mappedObjects.includes(objects))\r\n                return this;\r\n\r\n            if(!objects.data)\r\n                objects.setDataEnabled();\r\n\r\n            let map = new this.Map({\r\n                object: objects,\r\n                dynamic: dynamic,\r\n                segmentCount: segmentCount\r\n            });\r\n\r\n            objects.data.set('raycasterMap', map);\r\n            this.mappedObjects.push(objects);\r\n\r\n            return this;\r\n        }\r\n        \r\n        for(let object of objects) {\r\n            if(this.mappedObjects.includes(object))\r\n                continue;\r\n\r\n            if(!object.data)\r\n                object.setDataEnabled();\r\n\r\n            let map = new this.Map({\r\n                object: object,\r\n                dynamic: dynamic,\r\n                segmentCount: segmentCount\r\n            });\r\n\r\n            object.data.set('raycasterMap', map);\r\n            this.mappedObjects.push(object);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    //remove mapped Objects\r\n    removeMappedObjects: function(objects) {\r\n        if(!Array.isArray(objects)) {\r\n            let index = this.mappedObjects.indexOf(objects);\r\n            if(index >= 0)\r\n                this.mappedObjects.splice(index, 1)\r\n            return this;\r\n        }\r\n\r\n        for(let object of objects) {\r\n            let index = this.mappedObjects.indexOf(object);\r\n            if(index >= 0)\r\n                this.mappedObjects.splice(index, 1)\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    //scene update event listener\r\n    update: function() {\r\n        //update dynamic maps\r\n        if(this.mappedObjects.length > 0)\r\n            for(let mapppedObject of this.mappedObjects) {\r\n                if(mapppedObject.data === undefined)\r\n                    continue;\r\n\r\n                let map = mapppedObject.data.get('raycasterMap')\r\n                if(map.dynamic)\r\n                    map.updateMap();\r\n            }\r\n    },\r\n\r\n    //ray factory\r\n    createRay: function(options = {}) {\r\n        return new this.Ray(options, this);\r\n    }\r\n}\r\n\r\nRaycaster.prototype.Map = require('./map/map-core.js').Map;\r\nRaycaster.prototype.Ray = require('./ray/ray-core.js').Ray;\r\n"],"sourceRoot":""}