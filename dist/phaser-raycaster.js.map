{"version":3,"sources":["webpack://PhaserRaycaster/webpack/universalModuleDefinition","webpack://PhaserRaycaster/webpack/bootstrap","webpack://PhaserRaycaster/./src/main.js","webpack://PhaserRaycaster/./src/map/map-circle-methods.js","webpack://PhaserRaycaster/./src/map/map-core.js","webpack://PhaserRaycaster/./src/map/map-line-methods.js","webpack://PhaserRaycaster/./src/map/map-polygon-methods.js","webpack://PhaserRaycaster/./src/map/map-rectangle-methods.js","webpack://PhaserRaycaster/./src/ray/angle.js","webpack://PhaserRaycaster/./src/ray/cast.js","webpack://PhaserRaycaster/./src/ray/castCircle.js","webpack://PhaserRaycaster/./src/ray/castCone.js","webpack://PhaserRaycaster/./src/ray/cone.js","webpack://PhaserRaycaster/./src/ray/config.js","webpack://PhaserRaycaster/./src/ray/origin.js","webpack://PhaserRaycaster/./src/ray/range.js","webpack://PhaserRaycaster/./src/ray/ray-core.js","webpack://PhaserRaycaster/./src/ray/ray.js","webpack://PhaserRaycaster/./src/raycaster-core.js"],"names":["PhaserRaycaster","scene","systems","sys","settings","isBooted","events","once","boot","register","PluginManager","prototype","eventEmitter","on","start","preUpdate","update","postUpdate","pause","resume","sleep","wake","shutdown","destroy","test","name","console","log","time","delta","undefined","createRaycaster","options","_Raycaster","constructor","require","Raycaster","module","exports","getPoints","ray","_points","length","points","offset","Phaser","Geom","Point","x","object","displayWidth","originX","y","displayHeight","originY","rayA","Line","rayB","c","rotation","vector","SetToAngle","Angle","Length","cB","getPointB","origin","rayLength","Math","sqrt","pow","radius","scaleX","angle","dAngle","asin","push","getSegments","_segments","updateMap","segmentCount","scaleY","geom","segments","newPoints","point","i","Map","type","active","dynamic","_object","getIntersections","config","_getPolygonPoints","_getPolygonSegments","_updatePolygonMap","_getArcPoints","_getArcSegments","_updateArcMap","_getLinePoints","_getLineSegments","_updateLineMap","_getRectanglePoints","_getRectangleSegments","_updateRectangleMap","setSegmentCount","count","rectangle","line","polygon","arc","pointA","getPointA","pointB","vectorA","vectorB","closePath","last","getTopLeft","getTopRight","getBottomRight","getBottomLeft","setAngle","Normalize","_ray","range","setAngleDeg","DegToRad","cast","closestIntersection","closestDistance","MAX_SAFE_INTEGER","_raycaster","boundingBox","intersections","Intersects","GetLineToRectangle","intersection","distance","Distance","Between","target","objects","mappedObjects","getBounds","map","data","get","segment","Equals","LineToLine","isTangent","circleIntersections","circle","Circle","GetLineToCircle","x1","y1","ignoreNotIntersectedRays","castCircle","originalAngle","maps","rayTargets","testedObjects","iLength","boundsInRange","j","jLength","objectB","mapB","RectangleToRectangle","segmentA","segmentB","sort","a","b","bind","intersectionA","intersectionB","castCone","cone","minAngle","maxAngle","angleOffset","coneDeg","angleOffsetDeg","RadToDeg","ShortestBetween","abs","setCone","setConeDeg","setTo","angleDeg","detectionRange","detectionRangeCircle","setOrigin","setRange","setDetectionRange","rangeCircle","bounds","objectBounds","CircleToRectangle","Ray","raycaster","setRay","version","graphics","sortedPoints","mapSegmentCount","physics","world","setOptions","add","lineStyle","width","color","fillStyle","mapGameObjects","setBoundingBox","height","Rectangle","left","top","right","bottom","Array","isArray","includes","setDataEnabled","set","removeMappedObjects","index","indexOf","splice","mapppedObject","createRay"],"mappings":"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","file":"phaser-raycaster.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"PhaserRaycaster\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PhaserRaycaster\"] = factory();\n\telse\n\t\troot[\"PhaserRaycaster\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","/**\r\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\r\n* @copyright    2020 Marcin Walczak\r\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\r\n*/\r\n\r\nvar PhaserRaycaster = function (scene)\r\n{\r\n    //The Scene that owns this plugin\r\n    this.scene = scene;\r\n\r\n    this.systems = scene.sys;\r\n\r\n    if (!scene.sys.settings.isBooted)\r\n    {\r\n        scene.sys.events.once('boot', this.boot, this);\r\n    }\r\n};\r\n\r\n//Static function called by the PluginFile Loader.\r\nPhaserRaycaster.register = function (PluginManager)\r\n{\r\n    //  Register this plugin with the PluginManager, so it can be added to Scenes.\r\n\r\n    //  The first argument is the name this plugin will be known as in the PluginManager. It should not conflict with already registered plugins.\r\n    //  The second argument is a reference to the plugin object, which will be instantiated by the PluginManager when the Scene boots.\r\n    //  The third argument is the local mapping. This will make the plugin available under `this.sys.base` and also `this.base` from a Scene if\r\n    //  it has an entry in the InjectionMap.\r\n    PluginManager.register('PhaserRaycaster', PhaserRaycaster, 'base');\r\n};\r\n\r\nPhaserRaycaster.prototype = {\r\n\r\n    //  Called when the Plugin is booted by the PluginManager.\r\n    //  If you need to reference other systems in the Scene (like the Loader or DisplayList) then set-up those references now, not in the constructor.\r\n    boot: function ()\r\n    {\r\n        var eventEmitter = this.systems.events;\r\n\r\n        //  Listening to the following events is entirely optional, although we would recommend cleanly shutting down and destroying at least.\r\n        //  If you don't need any of these events then remove the listeners and the relevant methods too.\r\n\r\n        eventEmitter.on('start', this.start, this);\r\n\r\n        eventEmitter.on('preupdate', this.preUpdate, this);\r\n        eventEmitter.on('update', this.update, this);\r\n        eventEmitter.on('postupdate', this.postUpdate, this);\r\n\r\n        eventEmitter.on('pause', this.pause, this);\r\n        eventEmitter.on('resume', this.resume, this);\r\n\r\n        eventEmitter.on('sleep', this.sleep, this);\r\n        eventEmitter.on('wake', this.wake, this);\r\n\r\n        eventEmitter.on('shutdown', this.shutdown, this);\r\n        eventEmitter.on('destroy', this.destroy, this);\r\n    },\r\n\r\n    //A test method.\r\n    test: function (name)\r\n    {\r\n        console.log('RaycasterPlugin says hello ' + name + '!');\r\n    },\r\n\r\n    //Called when a Scene is started by the SceneManager. The Scene is now active, visible and running.\r\n    start: function ()\r\n    {\r\n    },\r\n\r\n    //Called every Scene step - phase 1\r\n    preUpdate: function (time, delta)\r\n    {\r\n    },\r\n\r\n    //Called every Scene step - phase 2\r\n    update: function (time, delta)\r\n    {\r\n    },\r\n\r\n    //Called every Scene step - phase 3\r\n    postUpdate: function (time, delta)\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is paused. A paused scene doesn't have its Step run, but still renders.\r\n    pause: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is resumed from a paused state.\r\n    resume: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is put to sleep. A sleeping scene doesn't update or render, but isn't destroyed or shutdown. preUpdate events still fire.\r\n    sleep: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is woken from a sleeping state.\r\n    wake: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene shuts down, it may then come back again later (which will invoke the 'start' event) but should be considered dormant.\r\n    shutdown: function ()\r\n    {\r\n    },\r\n\r\n    //Called when a Scene is destroyed by the Scene Manager. There is no coming back from a destroyed Scene, so clear up all resources here.\r\n    destroy: function ()\r\n    {\r\n        this.shutdown();\r\n\r\n        this.scene = undefined;\r\n    },\r\n\r\n    //Create Raycaster object\r\n    createRaycaster: function(options = {}) {\r\n        options.scene = this.scene;\r\n        return new this._Raycaster(options);\r\n    }\r\n\r\n};\r\n\r\nPhaserRaycaster.prototype.constructor = PhaserRaycaster;\r\nPhaserRaycaster.prototype._Raycaster = require('./raycaster-core.js').Raycaster;\r\n\r\n//Make sure you export the plugin for webpack to expose\r\n\r\nmodule.exports = PhaserRaycaster;\r\n","/**\r\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\r\n* @copyright    2020 Marcin Walczak\r\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\r\n*/\r\n\r\n/*Map methods for circles*/\r\n//get points\r\nexport function getPoints(ray = false) {\r\n    if(this._points.length > 0)\r\n        return this._points;\r\n    \r\n    let points = [];\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * (this.object.originX - 0.5);\r\n    offset.y = this.object.y - this.object.displayHeight * (this.object.originY - 0.5);\r\n\r\n    //calculate tangent rays\r\n    if(ray) {\r\n        let rayA = new Phaser.Geom.Line();\r\n        let rayB = new Phaser.Geom.Line();\r\n        let c;\r\n        \r\n        let rotation = this.object.rotation;\r\n        \r\n        if(rotation !== 0) {\r\n            let vector = new Phaser.Geom.Line(this.object.x, this.object.y, offset.x, offset.y);\r\n            Phaser.Geom.Line.SetToAngle(vector, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\r\n            let cB = vector.getPointB();\r\n            c = new Phaser.Geom.Line(ray.origin.x, ray.origin.y, cB.x, cB.y);\r\n        }\r\n        else { \r\n            c = new Phaser.Geom.Line(ray.origin.x, ray.origin.y, offset.x, offset.y);\r\n        }\r\n\r\n        let rayLength = Math.sqrt(Math.pow(Phaser.Geom.Line.Length(c), 2) - Math.pow(this.object.radius * this.object.scaleX, 2));\r\n\r\n        //ray angle\r\n        let angle = Phaser.Geom.Line.Angle(c);\r\n        let dAngle = Math.asin((this.object.radius * this.object.scaleX) / Phaser.Geom.Line.Length(c));\r\n        Phaser.Geom.Line.SetToAngle(rayA, ray.origin.x, ray.origin.y, angle - dAngle, rayLength);\r\n        Phaser.Geom.Line.SetToAngle(rayB, ray.origin.x, ray.origin.y, angle + dAngle, rayLength);\r\n\r\n        //adding tangent points\r\n        points.push(rayA.getPointB());\r\n        points.push(rayB.getPointB());\r\n    }\r\n\r\n    return points;\r\n};\r\n\r\n//get segments\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n//map update\r\nexport function updateMap() {\r\n    if(!this.segmentCount) {\r\n        this._points = [];\r\n        this._segments = [];\r\n        return this;\r\n    }\r\n    \r\n    //calculate offset based on object position and origin point\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * this.object.originX + this.object.radius * this.object.scaleX;\r\n    offset.y = this.object.y - this.object.displayHeight * this.object.originY + this.object.radius * this.object.scaleY;\r\n\r\n    //get points surrounding circle\r\n    let points = this.object.geom.getPoints(this.segmentCount);\r\n    let segments = []\r\n\r\n    //set points\r\n    //calculate positions after object's rotation\r\n    let rotation = this.object.rotation;\r\n    if(rotation !== 0) {\r\n        let newPoints = [];\r\n        for(let point of points) {\r\n            let vector = new Phaser.Geom.Line(this.object.x, this.object.y, this.object.x + (point.x + this.object.radius) * this.object.scaleX, this.object.y + (point.y + this.object.radius) * this.object.scaleY);\r\n            Phaser.Geom.Line.SetToAngle(vector, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\r\n            newPoints.push(vector.getPointB());\r\n        }\r\n        points = newPoints;\r\n    }\r\n    //if rotation === 0\r\n    else {\r\n        for(let point of points) {\r\n            point.x = point.x * this.object.scaleX + offset.x;\r\n            point.y = point.y * this.object.scaleY + offset.y;\r\n        }\r\n    }\r\n\r\n    //set segments\r\n    for(let i = 0, length = points.length; i < length; i++) {\r\n        if(i+1 < length)\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));\r\n        else\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[0].x, points[0].y));\r\n    }\r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n    return this;\r\n};\r\n","/**\r\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\r\n* @copyright    2020 Marcin Walczak\r\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\r\n*/\r\n\r\nexport function Map(options, scene) {\r\n    this.type;\r\n    this.active;\r\n    this.dynamic;\r\n    this._object;\r\n    this._points = [];\r\n    this._segments = [];\r\n    this.getPoints;\r\n    this.getSegments;\r\n    this.getIntersections;\r\n    this.segmentCount = 0;\r\n\r\n    this.config(options);\r\n    this.updateMap();\r\n\r\n    return this;\r\n};\r\n\r\n//config\r\nMap.prototype = {\r\n    config: function(options) {\r\n        this.object = options.object;\r\n        //object type\r\n        if(options.type === undefined)\r\n            options.type = options.object.type;\r\n        this.type = options.type;\r\n\r\n        switch(options.type) {\r\n            case 'Polygon':\r\n                this.getPoints = this._getPolygonPoints;\r\n                this.getSegments = this._getPolygonSegments;\r\n                this.updateMap = this._updatePolygonMap;\r\n                break;\r\n            case 'Arc':\r\n                this.getPoints = this._getArcPoints;\r\n                this.getSegments = this._getArcSegments;\r\n                this.updateMap = this._updateArcMap;\r\n                break;\r\n            case 'Line':\r\n                this.getPoints = this._getLinePoints;\r\n                this.getSegments = this._getLineSegments;\r\n                this.updateMap = this._updateLineMap;\r\n                break;\r\n            default:\r\n                this.getPoints = this._getRectanglePoints;\r\n                this.getSegments = this._getRectangleSegments;\r\n                this.updateMap = this._updateRectangleMap;\r\n        }\r\n\r\n        //dynamic map\r\n        this.dynamic = (options.dynamic == true) ? true : false;\r\n        this.segmentCount = (options.segmentCount) ? options.segmentCount : 0;\r\n\r\n        return this;\r\n    },\r\n\r\n    //set segments count for circle map\r\n    setSegmentCount: function(count) {\r\n        this.segmentCount = count;\r\n        this.updateMap();\r\n        return this;\r\n    }\r\n};\r\n//add methods for rectangle maps\r\nlet rectangle = require('./map-rectangle-methods.js');\r\nMap.prototype._getRectanglePoints = rectangle.getPoints;\r\nMap.prototype._getRectangleSegments = rectangle.getSegments;\r\nMap.prototype._updateRectangleMap = rectangle.updateMap;\r\n\r\n//add methods for line maps\r\nlet line = require('./map-line-methods.js');\r\nMap.prototype._getLinePoints = line.getPoints;\r\nMap.prototype._getLineSegments = line.getSegments;\r\nMap.prototype._updateLineMap = line.updateMap;\r\n\r\n//add methods for polygon maps\r\nlet polygon = require('./map-polygon-methods.js');\r\nMap.prototype._getPolygonPoints = polygon.getPoints;\r\nMap.prototype._getPolygonSegments = polygon.getSegments;\r\nMap.prototype._updatePolygonMap = polygon.updateMap;\r\n\r\n//add methods for circle maps\r\nlet arc = require('./map-circle-methods.js');\r\nMap.prototype._getArcPoints = arc.getPoints;\r\nMap.prototype._getArcSegments = arc.getSegments;\r\nMap.prototype._updateArcMap = arc.updateMap;\r\n","/**\r\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\r\n* @copyright    2020 Marcin Walczak\r\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\r\n*/\r\n\r\n/*Map methods for lines*/\r\n//get points\r\nexport function getPoints(ray = false) {\r\n    return this._points;\r\n};\r\n\r\n//get segments\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n//map update\r\nexport function updateMap() {\r\n    let points = [];\r\n    let segments = [];\r\n    \r\n    //calculate offset based on object position and origin point\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * this.object.originX;\r\n    offset.y = this.object.y - this.object.displayHeight * this.object.originY;\r\n    let pointA = this.object.geom.getPointA();\r\n    let pointB = this.object.geom.getPointB();\r\n\r\n    //calculate positions after object's rotation\r\n    let rotation = this.object.rotation;\r\n    if(rotation !== 0) {\r\n        let vectorA = new Phaser.Geom.Line(this.object.x, this.object.y, pointA.x * this.object.scaleX + offset.x, pointA.y * this.object.scaleY + offset.y);\r\n        Phaser.Geom.Line.SetToAngle(vectorA, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vectorA) + rotation, Phaser.Geom.Line.Length(vectorA));\r\n        pointA = vectorA.getPointB();\r\n\r\n        let vectorB = new Phaser.Geom.Line(this.object.x, this.object.y, pointB.x * this.object.scaleX + offset.x, pointB.y * this.object.scaleY + offset.y);\r\n        Phaser.Geom.Line.SetToAngle(vectorB, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vectorB) + rotation, Phaser.Geom.Line.Length(vectorB));\r\n        pointB = vectorB.getPointB();\r\n\r\n        //set points\r\n        points.push(new Phaser.Geom.Point(pointA.x, pointA.y));\r\n        points.push(new Phaser.Geom.Point(pointB.x, pointB.y));\r\n        //set segment\r\n        segments.push(new Phaser.Geom.Line(pointA.x, pointA.y, pointB.x, pointB.y));\r\n    }\r\n    //if rotation === 0\r\n    else {\r\n        //set points\r\n        points.push(new Phaser.Geom.Point(pointA.x * this.object.scaleX + offset.x, pointA.y * this.object.scaleY + offset.y));\r\n        points.push(new Phaser.Geom.Point(pointB.x * this.object.scaleX + offset.x, pointB.y * this.object.scaleY + offset.y));\r\n        //set segment\r\n        segments.push(new Phaser.Geom.Line(pointA.x + offset.x, pointA.y + offset.y, pointB.x + offset.x, pointB.y + offset.y));\r\n    }\r\n    \r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n    return this;\r\n};\r\n","/**\r\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\r\n* @copyright    2020 Marcin Walczak\r\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\r\n*/\r\n\r\n/*Map methods for polygons*/\r\n//get points\r\nexport function getPoints(ray = false) {\r\n    return this._points;\r\n};\r\n\r\n//get segments\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n//map update\r\nexport function updateMap() {\r\n    let points = [];\r\n    let segments = [];\r\n    \r\n    //calculate offset based on object position and origin point\r\n    let offset = new Phaser.Geom.Point();\r\n    offset.x = this.object.x - this.object.displayWidth * this.object.originX;\r\n    offset.y = this.object.y - this.object.displayHeight * this.object.originY;\r\n    //set points\r\n    //calculate positions after object's rotation\r\n    let rotation = this.object.rotation;\r\n    if(rotation !== 0) {\r\n        for(let point of this.object.geom.points) {\r\n            let vector = new Phaser.Geom.Line(this.object.x, this.object.y, point.x * this.object.scaleX + offset.x, point.y * this.object.scaleY + offset.y);\r\n            Phaser.Geom.Line.SetToAngle(vector, this.object.x, this.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\r\n            points.push(vector.getPointB());\r\n        }\r\n    }\r\n    //if rotation === 0\r\n    else {\r\n        for(let point of this.object.geom.points) {\r\n            points.push(new Phaser.Geom.Point(point.x * this.object.scaleX + offset.x, point.y * this.object.scaleY + offset.y));\r\n        }\r\n    }\r\n\r\n    //set segments\r\n    for(let i = 0, length = points.length; i < length; i++) {\r\n        if(i+1 < length)\r\n            segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));   \r\n    }\r\n    //if polygon is closed\r\n    if(this.object.closePath) {\r\n        let last = points.length - 1;\r\n        segments.push(new Phaser.Geom.Line(points[last].x, points[last].y, points[0].x, points[0].y));\r\n    }\r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n\r\n    return this;\r\n};\r\n","/**\r\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\r\n* @copyright    2020 Marcin Walczak\r\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\r\n*/\r\n\r\n/*Map methods for rectangles*/\r\n//get points\r\nexport function getPoints(ray = false) {\r\n    return this._points;\r\n};\r\n\r\n//get segments\r\nexport function getSegments() {\r\n    return this._segments;\r\n};\r\n\r\n//map update\r\nexport function updateMap() {\r\n    let points = [];\r\n    let segments = [];\r\n\r\n    //set points\r\n    points = [\r\n        this.object.getTopLeft(),\r\n        this.object.getTopRight(),\r\n        this.object.getBottomRight(),\r\n        this.object.getBottomLeft()\r\n    ];\r\n\r\n    //set segments\r\n    for(let i = 0, length = points.length; i < length; i++) {\r\n        if(i+1 < length)\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));\r\n        else\r\n        segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[0].x, points[0].y));\r\n    }\r\n\r\n    this._points = points;\r\n    this._segments = segments;\r\n\r\n    return this;\r\n};\r\n","/**\n * Set ray angle in radians.\n *\n * @function Ray.setAngle\n * @since 0.6.0\n *\n * @param {float} [angle] - Ray's angle in radians.\n *\n * @return {object} Ray object.\n */\nexport function setAngle(angle = 0) {\n    this.angle = Phaser.Math.Angle.Normalize(angle);\n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    return this;\n}\n\n/**\n * Set ray angle in degrees.\n *\n * @function Ray.setAngleDeg\n * @since 0.6.1\n *\n * @param {float} [angle] - Ray's angle in degrees.\n *\n * @return {object} Ray object.\n */\nexport function setAngleDeg(angle = 0) {\n    this.angle = Phaser.Math.Angle.Normalize(Phaser.Math.DegToRad(angle));\n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    return this;\n}\n","/**\n * Cast ray to find closest intersection with tested mapped objects.\n *\n * @function Ray.cast\n * @since 0.6.0\n *\n * @param {object} [options] - options that may include:\n * - {array} [objects] - Array of game objects to test. If not provided use all mapped game objects.\n * - {Phaser.Types.Math.Vector2Like} [target] - Ray's target point. Used in other casting methods to determine if ray was targeting mapped objects point.\n *\n * @return {Phaser.Types.Math.Vector2Like} / {boolean} - Point object of ray's closest intersection with tested objects. Returns false if no intersection has been found.\n */\nexport function cast(options = {}) {\n    let closestIntersection;\n    let closestDistance = Phaser.Math.MAX_SAFE_INTEGER;\n    //if bounding box is defined check bounding box intersection\n    if(this._raycaster && this._raycaster.boundingBox) {\n        let intersections = [];\n        Phaser.Geom.Intersects.GetLineToRectangle(this._ray, this._raycaster.boundingBox.rectangle, intersections);\n        if(intersections.length === 1)\n            closestIntersection = intersections[0];\n        else if(intersections.length > 1) {\n            for(let intersection of intersections) {\n                let distance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, intersection.x, intersection.y);\n                if(distance < closestDistance) {\n                    closestDistance = distance;\n                    closestIntersection = intersection;\n                }\n            }\n        }\n        else {\n            closestDistance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, options.target.x, options.target.y);\n            closestIntersection = options.target;\n        }\n    }\n\n    //if no objects to cast ray were passed, use raycasters mapped objects\n    if(!options.objects) {\n        if(this._raycaster)\n            options.objects = this._raycaster.mappedObjects;\n        else\n            return intersections;\n    }\n    \n    for(let object of options.objects) {\n        //check if object is intersected by ray\n        if(!Phaser.Geom.Intersects.GetLineToRectangle(this._ray, object.getBounds()))\n            continue;\n\n        let map = object.data.get('raycasterMap');\n        \n        //check intersections\n        for(let segment of map.getSegments()) {\n            let intersection = [];\n            //if target point is segmemt point\n            if(options.target) {\n                if(\n                    Phaser.Geom.Point.Equals(options.target, segment.getPointA())\n                    || Phaser.Geom.Point.Equals(options.target, segment.getPointB())\n                ) {\n                    intersection = options.target;\n                }\n                else if(!Phaser.Geom.Intersects.LineToLine(this._ray, segment, intersection))\n                    continue;\n            }\n            //if no intersection continue\n            else if(!Phaser.Geom.Intersects.LineToLine(this._ray, segment, intersection))\n              continue;\n            \n            //get closest intersection\n            let distance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, intersection.x, intersection.y);\n            if(distance < closestDistance) {\n                closestDistance = distance;\n                closestIntersection = intersection;\n            }\n        }\n\n        //check arc intersections if its not\n        if(map.type === 'Arc') {\n           //if arc has generated points (besides tangent points to ray)\n            if(map._points.length > 0) {\n                continue;\n            }\n            \n            //check if target point is a circle tangent point to ray\n            if(options.target) {\n                let points = map.getPoints(this);\n                let isTangent = false;\n                for(let point of points) {\n\n                    if(Phaser.Geom.Point.Equals(options.target, point)) {\n                        //get closest intersection\n                        let distance = Phaser.Math.Distance.Between(this.origin.x, this.origin.y, point.x, point.y);\n\n                        if(distance < closestDistance) {\n                            closestDistance = distance;\n                            closestIntersection = point;\n                            isTangent = true;\n                            break;\n                        }\n                    }\n                }\n\n                if(isTangent)\n                    continue;\n            }\n\n            let circleIntersections = [];\n            let offset = new Phaser.Geom.Point();\n            offset.x = map.object.x - map.object.displayWidth * (map.object.originX - 0.5);\n            offset.y = map.object.y - map.object.displayHeight * (map.object.originY - 0.5);\n\n            //calculate circle's center after rotation\n            let rotation = map.object.rotation;\n            if(rotation !== 0) {\n                let vector = new Phaser.Geom.Line(map.object.x, map.object.y, offset.x, offset.y);\n                Phaser.Geom.Line.SetToAngle(vector, map.object.x, map.object.y, Phaser.Geom.Line.Angle(vector) + rotation, Phaser.Geom.Line.Length(vector));\n                let cB = vector.getPointB();\n                offset.x = cB.x;\n                offset.y = cB.y;\n            }\n\n            //create transformed circle\n            let circle = new Phaser.Geom.Circle(offset.x, offset.y, map.object.radius * map.object.scaleX);\n\n            if(Phaser.Geom.Intersects.GetLineToCircle(this._ray, circle, circleIntersections)) {\n                for(let intersection of circleIntersections) {\n                    //get closest intersection\n                    let distance = Phaser.Math.Distance.Between(this._ray.x1, this._ray.y1, intersection.x, intersection.y);\n\n                    if(distance < closestDistance) {\n\n                        closestDistance = distance;\n                        closestIntersection = intersection;\n                    }\n                }\n            }\n        }\n    }\n\n    if(!closestIntersection)\n        return (this.ignoreNotIntersectedRays) ? false : this._ray.getPointB();\n    return new Phaser.Geom.Point(closestIntersection.x, closestIntersection.y);\n}\n","/**\n * Cast ray in all directions to find closest intersections with tested mapped objects.\n *\n * @function Ray.castCircle\n * @since 0.6.0\n *\n * @param {object} [options] - options that may include:\n * - {array} [objects] - Array of game objects to test. If not provided use all mapped game objects.\n *\n * @return {array} - Array of Point objects of ray's closest intersections with tested objects.\n */\nexport function castCircle(options = {}) {\n    let originalAngle = this.angle;\n    let intersections = [];\n    let maps = [];\n    let rayTargets = [];\n    let testedObjects = [];\n\n    //if no objects to cast ray were passed, use raycasters mapped objects\n    if(!options.objects) {\n        if(this._raycaster)\n            options.objects = this._raycaster.mappedObjects;\n        else\n            return intersections;\n\n        //if bounding box is defined add bounding box points to \n        if(this._raycaster && this._raycaster.boundingBox) {\n            for(let point of this._raycaster.boundingBox.points) {\n                rayTargets.push({\n                    point: point,\n                    angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y)\n                });\n            }\n        }\n\n        for(let i=0, iLength = options.objects.length; i < iLength; i++) {\n            let object = options.objects[i];\n            //if bound in range\n            if(!this.boundsInRange(object))\n                continue;\n            \n            testedObjects.push(object);\n\n            let map = object.data.get('raycasterMap');\n            maps.push(map);\n            //get points and angles\n            for(let point of map.getPoints(this)) {\n                rayTargets.push({\n                    point: point,\n                    angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y)\n                });\n            }\n\n            //get objects intersections\n            for(let j = i+1, jLength = options.objects.length; j < jLength; j++){\n                let objectB = options.objects[j];\n                let mapB = objectB.data.get('raycasterMap');\n                //check if bounding boxes overlap\n                if(!Phaser.Geom.Intersects.RectangleToRectangle(object.getBounds(), objectB.getBounds()))\n                    continue;\n                \n                //find objects intersections\n                for(let segmentA of map.getSegments()) {\n                    for(let segmentB of mapB.getSegments()) {\n                        let intersection = [];\n                        if(!Phaser.Geom.Intersects.LineToLine(segmentA, segmentB, intersection))\n                            continue;\n                        \n                        rayTargets.push({\n                            point: new Phaser.Geom.Point(intersection.x, intersection.y),\n                            angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, intersection.x, intersection.y)\n                        });\n                    }\n                }\n            }\n        }\n\n        //sort target points by angle\n        rayTargets.sort(function(a, b){\n            //if rays towards points have the same angles promote closer one\n            if(a.angle == b.angle) {\n                if(Phaser.Math.Distance.Between(this.origin.x, this.origin.y, a.point.x, a.point.y) < Phaser.Math.Distance.Between(this.origin.x, this.origin.y, b.point.x, b.point.y))\n                    return 1;\n                else\n                    return -1;\n            }\n\n            return a.angle - b.angle;\n        }.bind(this));\n\n        //cast rays\n        for(let target of rayTargets){\n            this.setAngle(target.angle);\n            let intersection = this.cast({\n                objects: testedObjects,\n                target: target.point\n            });\n            if(intersection){\n                //if intersection hits target point cast two additional rays\n                if(Phaser.Geom.Point.Equals(target.point, intersection)) {\n                    this.setAngle(target.angle - 0.0001);\n                    let intersectionA = this.cast({\n                        objects: testedObjects\n                    });\n                    if(intersectionA)\n                        intersections.push(intersectionA);\n                    \n                    intersections.push(intersection);\n\n                    this.setAngle(target.angle + 0.0001);\n                    let intersectionB = this.cast({\n                        objects: testedObjects\n                    });\n                    if(intersectionB)\n                        intersections.push(intersectionB);\n\n                    continue;\n                }\n                intersections.push(intersection);\n            }\n        }\n    }\n\n    this.setAngle(originalAngle);\n    return intersections;\n}\n","/**\n * Cast ray in cone to find closest intersections with tested mapped objects.\n *\n * @function Ray.castCone\n * @since 0.7.0\n *\n * @param {object} [options] - options that may include:\n * - {array} [objects] - Array of game objects to test. If not provided use all mapped game objects.\n *\n * @return {array} - Array of Point objects of ray's closest intersections with tested objects.\n */\nexport function castCone(options = {}) {\n    let originalAngle = this.angle;\n    let intersections = [];\n    let maps = [];\n    let rayTargets = [];\n    let testedObjects = [];\n    let cone = this.cone;\n    let minAngle = 0;\n    let maxAngle = 0;\n    let angleOffset = 0;\n\n    //set cone\n    if(options.cone !== undefined)\n        cone = options.cone;\n    if(options.coneDeg !== undefined)\n        cone = Phaser.Math.DegToRad(options.coneDeg);\n\n    //set cone min and max angle\n    minAngle = this.angle - cone / 2;\n    maxAngle = this.angle + cone / 2;\n\n    //add min and max angle points\n    this.setAngle(minAngle);\n    rayTargets.push({\n        point: this._ray.getPointB(),\n        angle: minAngle,\n        angleOffsetDeg: Phaser.Math.RadToDeg(-cone / 2)\n    });\n\n    this.setAngle(maxAngle);\n    rayTargets.push({\n        point: this._ray.getPointB(),\n        angle: maxAngle,\n        angleOffsetDeg: Phaser.Math.RadToDeg(cone / 2)\n    });\n\n    //if no objects to cast ray were passed, use raycasters mapped objects\n    if(!options.objects) {\n        if(this._raycaster)\n            options.objects = this._raycaster.mappedObjects;\n        else\n            return intersections;\n\n        //if bounding box is defined add bounding box points to \n        if(this._raycaster && this._raycaster.boundingBox) {\n            for(let point of this._raycaster.boundingBox.points) {\n\n                let angle = Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y);\n                let angleOffsetDeg = Phaser.Math.Angle.ShortestBetween(Phaser.Math.RadToDeg(angle), Phaser.Math.RadToDeg(originalAngle));\n\n                if(Math.abs(angleOffsetDeg) < Phaser.Math.RadToDeg(cone / 2)) {\n                    rayTargets.push({\n                        point: point,\n                        angle: angle,\n                        angleOffsetDeg: -angleOffsetDeg\n                    });\n                }\n            }\n        }\n    }\n\n    for(let i=0, iLength = options.objects.length; i < iLength; i++) {\n        let object = options.objects[i];\n        //if bound in range\n        if(!this.boundsInRange(object))\n            continue;\n        \n        testedObjects.push(object);\n\n        let map = object.data.get('raycasterMap');\n        maps.push(map);\n        //get points and angles\n        for(let point of map.getPoints(this)) {\n\n            let angle = Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y);\n            let angleOffsetDeg = Phaser.Math.Angle.ShortestBetween(Phaser.Math.RadToDeg(angle), Phaser.Math.RadToDeg(originalAngle));\n\n            if(Math.abs(angleOffsetDeg) < Phaser.Math.RadToDeg(cone / 2)) {\n                rayTargets.push({\n                    point: point,\n                    angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, point.x, point.y),\n                    angleOffsetDeg: -angleOffsetDeg\n                });\n            }\n        }\n\n        //get objects intersections\n        for(let j = i+1, jLength = options.objects.length; j < jLength; j++){\n            let objectB = options.objects[j];\n            let mapB = objectB.data.get('raycasterMap');\n            //check if bounding boxes overlap\n            if(!Phaser.Geom.Intersects.RectangleToRectangle(object.getBounds(), objectB.getBounds()))\n                continue;\n            \n            //find objects intersections\n            for(let segmentA of map.getSegments()) {\n                for(let segmentB of mapB.getSegments()) {\n                    let intersection = [];\n                    if(!Phaser.Geom.Intersects.LineToLine(segmentA, segmentB, intersection))\n                        continue;\n                    let angle = Phaser.Math.Angle.Between(this.origin.x, this.origin.y, intersection.x, intersection.y);\n                    let angleOffsetDeg = Phaser.Math.Angle.ShortestBetween(Phaser.Math.RadToDeg(angle), Phaser.Math.RadToDeg(originalAngle));\n\n                    if(Math.abs(angleOffsetDeg) < Phaser.Math.RadToDeg(cone / 2)) {\n                        rayTargets.push({\n                            point: new Phaser.Geom.Point(intersection.x, intersection.y),\n                            angle: Phaser.Math.Angle.Between(this.origin.x, this.origin.y, intersection.x, intersection.y),\n                            angleOffsetDeg: -angleOffsetDeg\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    //sort target points by angle\n    rayTargets.sort(function(a, b){\n        //if rays towards points have the same angles promote closer one\n        if(a.angle == b.angle) {\n            if(Phaser.Math.Distance.Between(this.origin.x, this.origin.y, a.point.x, a.point.y) < Phaser.Math.Distance.Between(this.origin.x, this.origin.y, b.point.x, b.point.y))\n                return 1;\n            else\n                return -1;\n        }\n\n        return a.angleOffsetDeg - b.angleOffsetDeg;\n    }.bind(this));\n\n    //cast rays\n    for(let target of rayTargets){\n        this.setAngle(target.angle);\n        let intersection = this.cast({\n            objects: testedObjects,\n            target: target.point\n        });\n        if(intersection){\n            //if intersection hits target point cast two additional rays\n            if(Phaser.Geom.Point.Equals(target.point, intersection)) {\n                this.setAngle(target.angle - 0.0001);\n                let intersectionA = this.cast({\n                    objects: testedObjects\n                });\n                if(intersectionA)\n                    intersections.push(intersectionA);\n                \n                intersections.push(intersection);\n\n                this.setAngle(target.angle + 0.0001);\n                let intersectionB = this.cast({\n                    objects: testedObjects\n                });\n                if(intersectionB)\n                    intersections.push(intersectionB);\n\n                continue;\n            }\n            intersections.push(intersection);\n        }\n    }\n\n    this.setAngle(originalAngle);\n    return intersections;\n}\n","/**\n * Set ray's cone angle in radians.\n *\n * @function Ray.setAngle\n * @since 0.7.0\n *\n * @param {float} [cone] - Ray's cone angle in radians.\n *\n * @return {object} Ray object.\n */\nexport function setCone(cone = 0) {\n    this.cone = cone;\n    return this;\n}\n\n/**\n * Set ray's cone angle in degrees.\n *\n * @function Ray.setAngleDeg\n * @since 0.7.0\n *\n * @param {float} [cone] - Ray's cone angle in degrees.\n *\n * @return {object} Ray object.\n */\nexport function setConeDeg(cone = 0) {\n    this.cone = Phaser.Math.DegToRad(cone);\n    return this;\n}\n","/**\n * Configure ray on creation.\n *\n * @function Ray.config\n * @since 0.6.0\n *\n * @param {object} [options] - Ray's congfiguration options. May include:\n * - {Phaser.Types.Math.Vector2Like} [origin] = {x:0, y:0} - Ray's position.\n * - {float} [angle] = 0 - Ray's angle in radians.\n * - {float} [angleDeg] = 0 - Ray's angle in degrees.\n * - {float} [cone] = 0 - Ray's cone angle in radians.\n * - {float} [coneDeg] = 0 - Ray's cone angle in degrees.\n * - {integer} [range] = Phaser.Math.MAX_SAFE_INTEGER - Ray's range.\n * - {integer} [detectionRange] = Phaser.Math.MAX_SAFE_INTEGER - Maximum distance between ray's position and tested objects bounding boxes.\n * - {boolean} [ignoreNotIntersectedRays] = true - If set true, ray returns false when it didn't hit anything. Otherwise returns ray's target.\n *\n * @return {object} Ray object.\n */\nexport function config(options) {\n    this.object = options.object;\n    //origin\n    if(options.origin)\n        this.origin.setTo(options.origin.x, options.origin.y);\n\n    //angle\n    if(options.angle)\n        this.angle = Phaser.Math.Angle.Normalize(options.angle);\n\n    //angle deg\n    if(options.angleDeg)\n        this.angle = Phaser.Math.Angle.Normalize(Phaser.Math.DegToRad(options.angleDeg));\n\n    //cone angle\n    if(options.cone)\n        this.cone = options.cone;\n\n    //cone angle deg\n    if(options.coneDeg)\n        this.cone = Phaser.Math.DegToRad(options.coneDeg);\n\n    //range (0 = max)\n    if(options.range)\n        this.range = options.range;\n\n    //detection range (0 = max)\n    if(options.detectionRange)\n        this.detectionRange = options.detectionRange;\n\n    if(options.ignoreNotIntersectedRays !== undefined)\n        this.ignoreNotIntersectedRays = (options.ignoreNotIntersectedRays == true)\n    \n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    this.detectionRangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\n\n    return this;\n}\n","/**\n * Set ray's position.\n *\n * @function Ray.setOrigin\n * @since 0.6.0\n *\n * @param {integer} x - X coordinate.\n * @param {integer} y - Y coordinate.\n *\n * @return {object} Ray object.\n */\nexport function setOrigin(x, y) {\n    this.origin.setTo(x, y);\n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    this.detectionRangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\n    return this;\n}\n","/**\n * Set ray's range.\n *\n * @function Ray.setRange\n * @since 0.6.0\n *\n * @param {integer} [range] = Phaser.Math.MAX_SAFE_INTEGER - Ray's range.\n *\n * @return {object} Ray object.\n */\nexport function setRange(range = Phaser.Math.MAX_SAFE_INTEGER) {\n    this.range = range;\n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    return this;\n}\n\n/**\n * Set ray's range.\n *\n * @function Ray.setRange\n * @since 0.6.0\n *\n * @param {integer} [detectionRange] = Phaser.Math.MAX_SAFE_INTEGER - Maximum distance between ray's position and tested objects bounding boxes.\n *\n * @return {object} Ray object.\n */\nexport function setDetectionRange(detectionRange = 0) {\n    this.detectionRange = detectionRange;\n    this.rangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\n    return this;\n}\n\n/**\n * Test if object's bounding box is in ray's detection range.\n *\n * @function Ray.boundsInRange\n * @since 0.6.0\n *\n * @param {object} object - Tested object\n * @param {Phaser.Geom. Rectangle} / {boolean} [bounds] = false - Tested object's bounds. If not passed bounds will be generated.\n *\n * @return {boolean} Information if object is in ray's detection range.\n */\nexport function boundsInRange(object, bounds = false) {\n    if(!this.detectionRange)\n        return true;\n\n    let objectBounds;\n    if(bounds)\n        objectBounds = bounds;\n    else\n        objectBounds = object.getBounds();\n\n    if(Phaser.Geom.Intersects.CircleToRectangle(this.detectionRangeCircle, objectBounds))\n        return true;\n\n    return false;\n}\n","/**\r\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\r\n* @copyright    2020 Marcin Walczak\r\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\r\n*/\r\n\r\nexport function Ray(options, raycaster) {\r\n    this.origin = new Phaser.Geom.Point();\r\n    this._ray = new Phaser.Geom.Line();\r\n    this.angle = 0;\r\n    this.cone = 0;\r\n    this.range = Phaser.Math.MAX_SAFE_INTEGER;\r\n    this.detectionRange = 0;\r\n    this.detectionRangeCircle = new Phaser.Geom.Circle();\r\n    this.ignoreNotIntersectedRays = true;\r\n    this.intersections = [];\r\n    this._raycaster = raycaster ? raycaster : false;\r\n\r\n    this.config(options);\r\n};\r\n\r\nRay.prototype = {\r\n    config: require('./config.js').config,\r\n    setRay: require('./ray.js').setRay,    \r\n    setOrigin: require('./origin.js').setOrigin,\r\n    setRange: require('./range.js').setRange,\r\n    setAngle: require('./angle.js').setAngle,\r\n    setAngleDeg: require('./angle.js').setAngleDeg,\r\n    setCone: require('./cone.js').setCone,\r\n    setConeDeg: require('./cone.js').setConeDeg,\r\n    setDetectionRange: require('./range.js').setDetectionRange,\r\n    boundsInRange: require('./range.js').boundsInRange,\r\n    cast: require('./cast.js').cast,\r\n    castCircle: require('./castCircle.js').castCircle,\r\n    castCone: require('./castCone.js').castCone\r\n};\r\n","/**\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\n* @copyright    2020 Marcin Walczak\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\n*/\n\n//set ray\nexport function setRay(x, y, angle, range = Phaser.Math.MAX_SAFE_INTEGER) {\n    this.origin.setTo(x, y);\n    this.angle = Phaser.Math.Angle.Normalize(angle);\n    this.range = range;\n\n    Phaser.Geom.Line.SetToAngle(this._ray, this.origin.x, this.origin.y, this.angle, this.range);\n    this.detectionRangeCircle.setTo(this.origin.x, this.origin.y,this.detectionRange);\n    return this;\n}\n","/**\r\n* @author       Marcin Walczak <mail@marcinwalczak.pl>\r\n* @copyright    2020 Marcin Walczak\r\n* @license      {@link https://github.com/wiserim/phaser-raycaster/blob/master/LICENSE|MIT License}\r\n*/\r\n\r\nexport function Raycaster(options) {\r\n    this.version = '0.7.0';\r\n    this.scene;\r\n    this.graphics;\r\n    this.boundingBox = false;\r\n    this.mappedObjects = [];\r\n    this.sortedPoints = [];\r\n    this.mapSegmentCount = 0;   //quantity of segments of map of circle\r\n\r\n    if(options !== undefined) {\r\n        if(options.boundingBox === undefined && options.scene !== undefined && options.scene.physics !== undefined)\r\n            options.boundingBox = options.scene.physics.world.bounds;\r\n\r\n        this.setOptions(options);\r\n    }\r\n\r\n    //update event\r\n    this.scene.events.on('update', this.update.bind(this));\r\n\r\n    return this;\r\n}\r\n\r\nRaycaster.prototype = {\r\n    //set options\r\n    setOptions: function(options) {\r\n        if(options.scene !== undefined) {\r\n            this.scene = options.scene;\r\n            this.graphics =  this.scene.add.graphics({ lineStyle: { width: 1, color: 0x00ff00}, fillStyle: { color: 0xff00ff } });\r\n        }\r\n\r\n        if(options.mapSegmentCount !== undefined)\r\n            this.mapSegmentCount = options.mapSegmentCount;\r\n\r\n        if(options.objects !== undefined)\r\n            this.mapGameObjects(options.objects);\r\n\r\n        if(options.boundingBox !== undefined)\r\n            this.setBoundingBox(options.boundingBox.x, options.boundingBox.y, options.boundingBox.width, options.boundingBox.height)\r\n\r\n        return this;\r\n    },\r\n\r\n    //set bounding box\r\n    setBoundingBox: function(x, y, width, height) {\r\n        this.boundingBox = {\r\n            rectangle: new Phaser.Geom.Rectangle(x, y, width, height),\r\n            points: [],\r\n            segments: []\r\n        }\r\n        //set points\r\n        let points = [\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.left, this.boundingBox.rectangle.top),\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.right, this.boundingBox.rectangle.top),\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.right, this.boundingBox.rectangle.bottom),\r\n            new Phaser.Geom.Point(this.boundingBox.rectangle.left, this.boundingBox.rectangle.bottom)\r\n        ];\r\n\r\n        this.boundingBox.points = points;\r\n\r\n        //set segments\r\n        for(let i = 0, length = this.boundingBox.points.length; i < length; i++) {\r\n            if(i+1 < length)\r\n            this.boundingBox.segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[i+1].x, points[i+1].y));\r\n            else\r\n            this.boundingBox.segments.push(new Phaser.Geom.Line(points[i].x, points[i].y, points[0].x, points[0].y));\r\n        }\r\n    },\r\n\r\n    //map object\r\n    mapGameObjects: function(objects, dynamic = false, segmentCount = this.mapSegmentCount) {\r\n        if(!Array.isArray(objects)) {\r\n            if(this.mappedObjects.includes(objects))\r\n                return this;\r\n\r\n            if(!objects.data)\r\n                objects.setDataEnabled();\r\n\r\n            let map = new this.Map({\r\n                object: objects,\r\n                dynamic: dynamic,\r\n                segmentCount: segmentCount\r\n            }, this.scene);\r\n\r\n            objects.data.set('raycasterMap', map);\r\n            this.mappedObjects.push(objects);\r\n\r\n            return this;\r\n        }\r\n        \r\n        for(let object of objects) {\r\n            if(this.mappedObjects.includes(object))\r\n                continue;\r\n\r\n            if(!object.data)\r\n                object.setDataEnabled();\r\n\r\n            let map = new this.Map({\r\n                object: object,\r\n                dynamic: dynamic,\r\n                segmentCount: segmentCount\r\n            });\r\n\r\n            object.data.set('raycasterMap', map);\r\n            this.mappedObjects.push(object);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    //remove mapped Objects\r\n    removeMappedObjects: function(objects) {\r\n        if(!Array.isArray(objects)) {\r\n            let index = this.mappedObjects.indexOf(objects);\r\n            if(index >= 0)\r\n                this.mappedObjects.splice(index, 1)\r\n            return this;\r\n        }\r\n\r\n        for(let object of objects) {\r\n            let index = this.mappedObjects.indexOf(object);\r\n            if(index >= 0)\r\n                this.mappedObjects.splice(index, 1)\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    //scene update event listener\r\n    update: function() {\r\n        //update dynamic maps\r\n        if(this.mappedObjects.length > 0)\r\n            for(let mapppedObject of this.mappedObjects) {\r\n                if(mapppedObject.data === undefined)\r\n                    continue;\r\n\r\n                let map = mapppedObject.data.get('raycasterMap')\r\n                if(map.dynamic)\r\n                    map.updateMap();\r\n            }\r\n    },\r\n\r\n    //ray factory\r\n    createRay: function(options = {}) {\r\n        return new this.Ray(options, this);\r\n    }\r\n}\r\n\r\nRaycaster.prototype.Map = require('./map/map-core.js').Map;\r\nRaycaster.prototype.Ray = require('./ray/ray-core.js').Ray;\r\n"],"sourceRoot":""}